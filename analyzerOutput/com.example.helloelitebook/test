dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView.createTabView(androidx.appcompat.app.ActionBar$Tab,boolean)androidx.appcompat.widget.ScrollingTabContainerView$TabView
                          androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener.<init>(androidx.appcompat.widget.ScrollingTabContainerView)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.<init>(android.view.View,java.lang.CharSequence)void
                                                     androidx.appcompat.widget.TooltipCompatHandler$1.<init>(androidx.appcompat.widget.TooltipCompatHandler)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.ActionMenuPresenter.<init>(android.content.Context)void
                                          androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback.<init>(androidx.appcompat.widget.ActionMenuPresenter)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.Fragment.<init>()void
  androidx.fragment.app.Fragment$1.<init>(androidx.fragment.app.Fragment)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.core.view.ViewPropertyAnimatorCompat$2.<init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.app.ActivityRecreator$3.run()void
                                                        androidx.core.app.ActivityRecreator.<clinit>()void
                                                         androidx.core.app.ActivityRecreator.getTokenField()java.lang.reflect.Field

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.loader.app.LoaderManagerImpl$LoaderObserver.onChanged(java.lang.Object)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.fragment.app.FragmentActivity.onCreate(android.os.Bundle)void
    androidx.fragment.app.FragmentController.attachHost(androidx.fragment.app.Fragment)void
     androidx.fragment.app.FragmentManagerImpl.attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)void
      androidx.fragment.app.FragmentManagerViewModel.<clinit>()void
       androidx.fragment.app.FragmentManagerViewModel$1.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.isShowing()boolean
                     androidx.appcompat.view.menu.CascadingMenuPopup.isShowing()boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onSaveInstanceState(android.os.Bundle)void
  androidx.fragment.app.FragmentActivity.onSaveInstanceState(android.os.Bundle)void
   androidx.fragment.app.FragmentController.saveAllState()android.os.Parcelable
    androidx.fragment.app.FragmentManagerImpl.saveAllState()android.os.Parcelable
     androidx.fragment.app.FragmentState.<clinit>()void
      androidx.fragment.app.FragmentState$1.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$6.run()void
                                     androidx.core.view.ViewPropertyAnimatorCompat.setListener(androidx.core.view.ViewPropertyAnimatorListener)androidx.core.view.ViewPropertyAnimatorCompat
                                      androidx.constraintlayout.widget.ConstraintHelper.setTag(int,java.lang.Object)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.FragmentManagerImpl$2.run()void
                                                        androidx.fragment.app.FragmentManagerImpl.execPendingActions()boolean
                                                         androidx.fragment.app.FragmentManagerImpl.cleanupExec()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.ToolbarWidgetWrapper.setDisplayOptions(int)void
                                              androidx.appcompat.widget.ToolbarWidgetWrapper.updateToolbarLogo()void
                                               androidx.appcompat.widget.Toolbar.setLogo(android.graphics.drawable.Drawable)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.view.menu.BaseMenuPresenter.addItemView(android.view.View,int)void
                                             androidx.core.widget.NestedScrollView.addView(android.view.View,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.FragmentManagerImpl$2.run()void
                                                        androidx.fragment.app.FragmentManagerImpl.execPendingActions()boolean
                                                         androidx.fragment.app.FragmentManagerImpl.burpActive()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.ActionMenuPresenter.<init>(android.content.Context)void
                                          androidx.appcompat.view.menu.BaseMenuPresenter.<init>(android.content.Context,int,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$6.run()void
                                     androidx.core.view.ViewCompat.animate(android.view.View)androidx.core.view.ViewPropertyAnimatorCompat

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.core.app.ActivityCompat$1.run()void
                                                                  androidx.fragment.app.FragmentActivity.onRequestPermissionsResult(int,java.lang.String[],int[])void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.appcompat.widget.SuggestionsAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void
                            androidx.appcompat.widget.AppCompatTextView.getText()java.lang.CharSequence
                             androidx.appcompat.widget.AppCompatTextView.consumeTextFutureAndSetBlocking()void
                              androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)void
                               androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView)androidx.core.text.PrecomputedTextCompat$Params
                                androidx.core.text.PrecomputedTextCompat$Params.<init>(android.text.PrecomputedText$Params)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)void
                                           androidx.appcompat.view.ActionBarPolicy.get(android.content.Context)androidx.appcompat.view.ActionBarPolicy
                                            androidx.appcompat.view.ActionBarPolicy.<init>(android.content.Context)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.loader.app.LoaderManagerImpl$LoaderInfo.onActive()void
               androidx.loader.content.Loader.startLoading()void
                androidx.loader.content.CursorLoader.onStartLoading()void
                 androidx.loader.content.Loader.forceLoad()void
                  androidx.loader.content.AsyncTaskLoader.onForceLoad()void
                   androidx.loader.content.AsyncTaskLoader$LoadTask.<init>(androidx.loader.content.AsyncTaskLoader)void
                    androidx.loader.content.ModernAsyncTask.<init>()void
                     androidx.loader.content.ModernAsyncTask$2.<init>(androidx.loader.content.ModernAsyncTask)void
                      androidx.loader.content.ModernAsyncTask$WorkerRunnable.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.fragment.app.FragmentManagerImpl.popBackStack(int,int)void
                                                                  androidx.fragment.app.FragmentManagerImpl$PopBackStackState.<init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.widget.ShareActionProvider.onPrepareSubMenu(android.view.SubMenu)void
                                                              androidx.appcompat.view.menu.MenuItemWrapperICS.setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)android.view.MenuItem
                                                               androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper.<init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback.run()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.fragment.app.FragmentActivity.onCreate(android.os.Bundle)void
    androidx.fragment.app.FragmentController.restoreSaveState(android.os.Parcelable)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData.assertMainThread(java.lang.String)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.MenuItemImpl.getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView)java.lang.CharSequence
                                                 androidx.appcompat.view.menu.MenuItemImpl.getTitleCondensed()java.lang.CharSequence

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$3.run()void
                                                        androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback.call()java.lang.Object
                                                         androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback.call()androidx.core.text.PrecomputedTextCompat
                                                          androidx.core.text.PrecomputedTextCompat.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$6.run()void
                                     androidx.core.view.ViewPropertyAnimatorCompat.setListener(androidx.core.view.ViewPropertyAnimatorListener)androidx.core.view.ViewPropertyAnimatorCompat
                                      androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14.<init>(androidx.core.view.ViewPropertyAnimatorCompat)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal.getTintList(android.content.Context,int)android.content.res.ColorStateList
                                                         androidx.appcompat.widget.ResourceManagerInternal.addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.<clinit>()void
                 androidx.arch.core.executor.ArchTaskExecutor$2.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.arch.core.internal.SafeIterableMap.remove(java.lang.Object)java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.appcompat.widget.SuggestionsAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void
                            androidx.appcompat.widget.SuggestionsAdapter.formatUrl(java.lang.CharSequence)java.lang.CharSequence

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.fragment.app.FragmentTransitionImpl$3.run()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.widget.ShareActionProvider.onPrepareSubMenu(android.view.SubMenu)void
                                                              androidx.appcompat.widget.ActivityChooserModel.getActivity(int)android.content.pm.ResolveInfo
                                                               androidx.appcompat.widget.ActivityChooserModel.ensureConsistentState()void
                                                                androidx.appcompat.widget.ActivityChooserModel.readHistoricalDataIfNeeded()boolean
                                                                 androidx.appcompat.widget.ActivityChooserModel.readHistoricalDataImpl()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1.run()void
                                     androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback.peekDrawer()void
                                      androidx.drawerlayout.widget.DrawerLayout.getDrawerLockMode(android.view.View)int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.getInstance()androidx.arch.core.executor.ArchTaskExecutor
                 androidx.arch.core.executor.ArchTaskExecutor.<init>()void
                  androidx.arch.core.executor.TaskExecutor.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.getDisabledThemeAttrColor(android.content.Context,int)int
                                                          androidx.appcompat.widget.ThemeUtils.getThemeAttrColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                           androidx.appcompat.widget.TintTypedArray.getColorStateList(int)android.content.res.ColorStateList
                                                            androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                             androidx.appcompat.content.res.AppCompatResources.getCachedColorStateList(android.content.Context,int)android.content.res.ColorStateList

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$3.run()void
                                                        androidx.fragment.app.Fragment.callStartTransitionListener()void
                                                         androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener.onStartEnterTransition()void
                                                          androidx.fragment.app.FragmentManagerImpl.scheduleCommit()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.arch.core.internal.SafeIterableMap.remove(java.lang.Object)java.lang.Object
            androidx.collection.MapCollections$ArrayIterator.next()java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.getDisabledThemeAttrColor(android.content.Context,int)int
                                                          androidx.appcompat.widget.ThemeUtils.getTypedValue()android.util.TypedValue

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onDestroy()void
  androidx.fragment.app.FragmentActivity.onDestroy()void
   androidx.fragment.app.FragmentController.dispatchDestroy()void
    androidx.fragment.app.FragmentManagerImpl.dispatchDestroy()void
     androidx.fragment.app.FragmentManagerImpl.dispatchStateChange(int)void
      androidx.fragment.app.FragmentManagerImpl.moveToState(int,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$3.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$3.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.core.view.ViewCompat.<clinit>()void
                      androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.widget.ShareActionProvider.onPrepareSubMenu(android.view.SubMenu)void
                                                              androidx.appcompat.view.menu.MenuWrapperICS.clear()void
                                                               androidx.appcompat.view.menu.BaseMenuWrapper.internalClear()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)android.graphics.drawable.Drawable
                                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
                                                          androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)void
                                                           androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.setMenu(androidx.appcompat.view.menu.MenuBuilder)void
                                        androidx.appcompat.view.menu.MenuBuilder.removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$2.run()void
                                                        androidx.core.provider.SelfDestructiveThread$2$1.<init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.view.menu.MenuBuilder.restoreActionViewStates(android.os.Bundle)void
                                        androidx.appcompat.view.menu.MenuItemImpl.expandActionView()boolean
                                         androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper.onMenuItemActionExpand(android.view.MenuItem)boolean
                                          androidx.appcompat.view.menu.BaseMenuWrapper.getMenuItemWrapper(android.view.MenuItem)android.view.MenuItem
                                           androidx.appcompat.view.menu.MenuItemWrapperICS.<init>(android.content.Context,androidx.core.internal.view.SupportMenuItem)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat$4$8.<init>(androidx.core.provider.FontsContractCompat$4)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter.getItem(int)androidx.appcompat.view.menu.MenuItemImpl

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setSubtitleTextAppearance(android.content.Context,int)void
                                              androidx.appcompat.widget.AppCompatTextView.setTextAppearance(android.content.Context,int)void
                                               androidx.appcompat.widget.AppCompatTextHelper.onSetTextAppearance(android.content.Context,int)void
                                                androidx.appcompat.widget.AppCompatButton.setTextSize(int,float)void
                                                 androidx.appcompat.widget.AppCompatTextHelper.setTextSize(int,float)void
                                                  androidx.appcompat.widget.AppCompatTextHelper.setTextSizeInternal(int,float)void
                                                   androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setTextSizeInternal(int,float)void
                                                    androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setRawTextSize(float)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.Fragment.<init>()void
  androidx.lifecycle.MutableLiveData.<init>()void
   androidx.lifecycle.LiveData.<init>()void
    androidx.arch.core.internal.SafeIterableMap.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.getDisabledThemeAttrColor(android.content.Context,int)int
                                                          androidx.appcompat.widget.ThemeUtils.getThemeAttrColor(android.content.Context,int,float)int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat$4$5.<init>(androidx.core.provider.FontsContractCompat$4)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.FragmentManagerImpl$2.run()void
                                                        androidx.fragment.app.FragmentManagerImpl.execPendingActions()boolean
                                                         androidx.fragment.app.FragmentManagerImpl.generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.loader.app.LoaderManagerImpl$LoaderObserver.onChanged(java.lang.Object)void
          androidx.loader.content.Loader.dataToString(java.lang.Object)java.lang.String
           androidx.core.util.DebugUtils.buildShortClassTag(java.lang.Object,java.lang.StringBuilder)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.MediatorLiveData.onInactive()void
               androidx.collection.MapCollections$MapIterator.getValue()java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.checkVectorDrawableSetup(android.content.Context)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onSaveInstanceState(android.os.Bundle)void
  androidx.fragment.app.FragmentActivity.onSaveInstanceState(android.os.Bundle)void
   androidx.activity.ComponentActivity.onSaveInstanceState(android.os.Bundle)void
    androidx.savedstate.SavedStateRegistryController.performSave(android.os.Bundle)void
     androidx.savedstate.SavedStateRegistry.performSave(android.os.Bundle)void
      androidx.savedstate.Recreator$SavedStateProvider.saveState()android.os.Bundle

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.view.menu.MenuBuilder.restoreActionViewStates(android.os.Bundle)void
                                        androidx.appcompat.view.menu.MenuItemImpl.expandActionView()boolean
                                         androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper.onMenuItemActionExpand(android.view.MenuItem)boolean
                                          androidx.appcompat.view.menu.BaseMenuWrapper.getMenuItemWrapper(android.view.MenuItem)android.view.MenuItem

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback.<init>(androidx.appcompat.widget.ActionMenuPresenter)void
                                                androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)void
                                           androidx.appcompat.widget.AppCompatImageView.setImageDrawable(android.graphics.drawable.Drawable)void
                                            androidx.appcompat.widget.AppCompatImageHelper.applySupportImageTint()void
                                             androidx.appcompat.widget.DrawableUtils.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$3.run()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.updateForNightMode(int,boolean)boolean
      androidx.core.app.ActivityCompat.recreate(android.app.Activity)void
       androidx.core.app.ActivityRecreator.recreate(android.app.Activity)boolean
        androidx.core.app.ActivityRecreator$2.<init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback.<init>(androidx.appcompat.app.AppCompatDelegateImpl)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.fragment.app.BackStackRecord.commit()int
                                                                  androidx.fragment.app.BackStackRecord.commitInternal(boolean)int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setSubtitleTextAppearance(android.content.Context,int)void
                                              androidx.appcompat.widget.AppCompatTextView.setTextAppearance(android.content.Context,int)void
                                               androidx.appcompat.widget.AppCompatTextHelper.onSetTextAppearance(android.content.Context,int)void
                                                androidx.appcompat.widget.AppCompatTextView.setTypeface(android.graphics.Typeface,int)void
                                                 androidx.core.graphics.TypefaceCompat.<clinit>()void
                                                  androidx.core.graphics.TypefaceCompatBaseImpl.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.view.menu.MenuBuilder.flagActionItems()void
                                             androidx.appcompat.view.menu.MenuBuilder.getVisibleItems()java.util.ArrayList

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setSubtitleTextAppearance(android.content.Context,int)void
                                              androidx.appcompat.widget.AppCompatTextView.setTextAppearance(android.content.Context,int)void
                                               androidx.appcompat.widget.AppCompatTextHelper.onSetTextAppearance(android.content.Context,int)void
                                                androidx.appcompat.widget.AppCompatTextView.setTypeface(android.graphics.Typeface,int)void
                                                 androidx.core.graphics.TypefaceCompat.<clinit>()void
                                                  androidx.core.graphics.TypefaceCompatApi26Impl.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.<init>()void
  androidx.appcompat.app.AppCompatActivity.<init>()void
   androidx.fragment.app.FragmentActivity.<init>()void
    androidx.fragment.app.FragmentActivity$HostCallbacks.<init>(androidx.fragment.app.FragmentActivity)void
     androidx.fragment.app.FragmentHostCallback.<init>(androidx.fragment.app.FragmentActivity)void
      androidx.fragment.app.FragmentHostCallback.<init>(android.app.Activity,android.content.Context,android.os.Handler,int)void
       androidx.fragment.app.FragmentContainer.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab)void
                          androidx.appcompat.widget.ScrollingTabContainerView$TabView.update()void
                           androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context,android.util.AttributeSet,int)void
                            androidx.appcompat.widget.AppCompatTextHelper.loadFromAttributes(android.util.AttributeSet,int)void
                             androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize()int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl.<clinit>()void
  androidx.fragment.app.FragmentManager.<clinit>()void
   androidx.fragment.app.FragmentFactory.<clinit>()void
    androidx.collection.SimpleArrayMap.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         androidx.fragment.app.Fragment.ensureAnimationInfo()androidx.fragment.app.Fragment$AnimationInfo
                                                          androidx.fragment.app.Fragment$AnimationInfo.<init>()void
                                                           androidx.fragment.app.Fragment.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.fragment.app.FragmentTransition$2.run()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.AppCompatPopupWindow.setSupportOverlapAnchor(boolean)void
                                                    androidx.core.widget.PopupWindowCompat.setOverlapAnchor(android.widget.PopupWindow,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.fragment.app.FragmentManagerViewModel.clearNonConfigState(androidx.fragment.app.Fragment)void
     androidx.fragment.app.FragmentManagerViewModel.onCleared()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.updateForNightMode(int,boolean)boolean
      androidx.appcompat.app.AppCompatDelegateImpl.updateResourcesConfigurationForNightMode(int,boolean)void
       androidx.appcompat.app.ResourcesFlusher.flush(android.content.res.Resources)void
        androidx.appcompat.app.ResourcesFlusher.flushLollipops(android.content.res.Resources)void
         androidx.collection.SimpleArrayMap.clear()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.widget.ShareActionProvider.onPrepareSubMenu(android.view.SubMenu)void
                                                              androidx.appcompat.widget.ActivityChooserModel.getActivity(int)android.content.pm.ResolveInfo
                                                               androidx.appcompat.widget.ActivityChooserModel.ensureConsistentState()void
                                                                androidx.appcompat.widget.ActivityChooserModel.pruneExcessiveHistoricalRecordsIfNeeded()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.MenuPopupHelper.getPopup()androidx.appcompat.view.menu.MenuPopup
                      androidx.appcompat.view.menu.MenuPopupHelper.createPopup()androidx.appcompat.view.menu.MenuPopup
                       androidx.appcompat.view.menu.StandardMenuPopup.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean)void
                        androidx.appcompat.view.menu.MenuAdapter.<init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int)void
                         androidx.appcompat.view.menu.MenuAdapter.findExpandedIndex()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.core.view.ViewPropertyAnimatorCompat.<init>(android.view.View)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemWrapperICS.getSubMenu()android.view.SubMenu
                                        androidx.appcompat.view.menu.BaseMenuWrapper.getSubMenuWrapper(android.view.SubMenu)android.view.SubMenu
                                         androidx.appcompat.view.menu.SubMenuWrapperICS.<init>(android.content.Context,androidx.core.internal.view.SupportSubMenu)void
                                          androidx.appcompat.view.menu.MenuWrapperICS.<init>(android.content.Context,androidx.core.internal.view.SupportMenu)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.getDisabledThemeAttrColor(android.content.Context,int)int
                                                          androidx.appcompat.widget.ThemeUtils.getThemeAttrColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                           androidx.appcompat.widget.TintTypedArray.getColorStateList(int)android.content.res.ColorStateList
                                                            androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                             androidx.appcompat.content.res.AppCompatResources.addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)void
                                                              androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry.<init>(android.content.res.ColorStateList,android.content.res.Configuration)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.appcompat.widget.SuggestionsAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void
                            androidx.appcompat.widget.AppCompatTextView.getText()java.lang.CharSequence
                             androidx.appcompat.widget.AppCompatTextView.consumeTextFutureAndSetBlocking()void
                              androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)void
                               androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView)androidx.core.text.PrecomputedTextCompat$Params
                                androidx.core.text.PrecomputedTextCompat$Params$Builder.<init>(android.text.TextPaint)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])android.graphics.Typeface
                                                         androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                          androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                           androidx.core.graphics.TypefaceCompatBaseImpl.findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)androidx.core.provider.FontsContractCompat$FontInfo
                                                            androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.appcompat.widget.SuggestionsAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl.<clinit>()void
  androidx.fragment.app.FragmentManager.<clinit>()void
   androidx.fragment.app.FragmentFactory.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)void
                                                  androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.onStateChange(int[])boolean
                                                   androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int)boolean
                                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.transitionHasReversibleFlag(int,int)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.mapNightMode(int)int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.createDrawableIfNeeded(android.content.Context,int)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal.addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.mutate()void
                                        androidx.collection.LongSparseArray.clone()androidx.collection.LongSparseArray

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.fragment.app.FragmentActivity.onCreate(android.os.Bundle)void
    androidx.fragment.app.FragmentController.restoreSaveState(android.os.Parcelable)void
     androidx.fragment.app.FragmentManagerImpl.restoreSaveState(android.os.Parcelable)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setSubtitleTextAppearance(android.content.Context,int)void
                                              androidx.appcompat.widget.AppCompatTextView.setTextAppearance(android.content.Context,int)void
                                               androidx.appcompat.widget.AppCompatTextHelper.onSetTextAppearance(android.content.Context,int)void
                                                androidx.appcompat.widget.AppCompatTextHelper.updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray)void
                                                 androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.<init>(androidx.appcompat.widget.AppCompatTextHelper,int,int)void
                                                  androidx.core.content.res.ResourcesCompat$FontCallback.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           androidx.loader.content.ModernAsyncTask.executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])androidx.loader.content.ModernAsyncTask

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  com.example.helloelitebook.TestEE.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.StateListDrawable$StateListState.mutate()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setNavigationOnClickListener(android.view.View$OnClickListener)void
                                              androidx.appcompat.widget.Toolbar.ensureNavButtonView()void
                                               androidx.appcompat.widget.AppCompatImageButton.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.TintContextWrapper.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onSaveInstanceState(android.os.Bundle)void
  androidx.appcompat.app.AppCompatDelegateImpl.onSaveInstanceState(android.os.Bundle)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatDelegateImpl.getMenuInflater()android.view.MenuInflater
                                            androidx.appcompat.app.AppCompatDelegateImpl.initWindowDecorActionBar()void
                                             androidx.appcompat.app.AppCompatDelegateImpl.ensureSubDecor()void
                                              androidx.appcompat.app.AppCompatDelegateImpl.getPanelState(int,boolean)androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserModel.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context)void
                                           androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context,android.util.AttributeSet)void
                                            androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context,android.util.AttributeSet,int)void
                                             androidx.appcompat.widget.ActivityChooserView$2.<init>(androidx.appcompat.widget.ActivityChooserView)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.MenuPopupHelper.getPopup()androidx.appcompat.view.menu.MenuPopup
                      androidx.appcompat.view.menu.MenuPopupHelper.createPopup()androidx.appcompat.view.menu.MenuPopup
                       androidx.appcompat.view.menu.StandardMenuPopup.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.getDisabledThemeAttrColor(android.content.Context,int)int
                                                          androidx.appcompat.widget.ThemeUtils.getThemeAttrColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                           androidx.appcompat.widget.TintTypedArray.getColorStateList(int)android.content.res.ColorStateList
                                                            androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                             androidx.appcompat.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                              androidx.core.content.res.ColorStateListInflaterCompat.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)android.content.res.ColorStateList
                                                               androidx.core.content.res.ColorStateListInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)android.content.res.ColorStateList
                                                                androidx.core.content.res.ColorStateListInflaterCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)android.content.res.ColorStateList

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.getDisabledThemeAttrColor(android.content.Context,int)int
                                                          androidx.appcompat.widget.ThemeUtils.getThemeAttrColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                           androidx.appcompat.widget.TintTypedArray.getColorStateList(int)android.content.res.ColorStateList
                                                            androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                             androidx.appcompat.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                              androidx.core.content.res.ColorStateListInflaterCompat.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)android.content.res.ColorStateList
                                                               androidx.core.content.res.ColorStateListInflaterCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)android.content.res.ColorStateList

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.updateForNightMode(int,boolean)boolean
      androidx.core.app.ActivityCompat.recreate(android.app.Activity)void
       androidx.core.app.ActivityRecreator.recreate(android.app.Activity)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.appcompat.app.AppCompatDelegateImpl.onCreate(android.os.Bundle)void
    androidx.core.app.NavUtils.getParentActivityName(android.app.Activity)java.lang.String
     androidx.core.app.NavUtils.getParentActivityName(android.content.Context,android.content.ComponentName)java.lang.String

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setSubtitleTextAppearance(android.content.Context,int)void
                                              androidx.appcompat.widget.AppCompatTextView.setTextAppearance(android.content.Context,int)void
                                               androidx.appcompat.widget.AppCompatTextHelper.onSetTextAppearance(android.content.Context,int)void
                                                androidx.appcompat.widget.AppCompatTextHelper.updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray)void
                                                 androidx.appcompat.widget.TintTypedArray.getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback)android.graphics.Typeface
                                                  androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)android.graphics.Typeface
                                                   androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)android.graphics.Typeface

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)void
                                                  androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.onStateChange(int[])boolean
                                                   androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int)boolean
                                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.getKeyframeIdAt(int)int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor.<init>(androidx.appcompat.widget.ListPopupWindow)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ListMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ListMenuItemView.setShortcut(boolean,char)void
                                                 androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel()java.lang.String

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.get()androidx.appcompat.widget.ResourceManagerInternal
                                                      androidx.appcompat.widget.ResourceManagerInternal.installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)void
                                                       androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.<clinit>()void
                                                         androidx.core.provider.FontsContractCompat$5.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.appcompat.widget.SuggestionsAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void
                            androidx.appcompat.widget.SuggestionsAdapter.getIcon1(android.database.Cursor)android.graphics.drawable.Drawable
                             androidx.appcompat.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor)android.graphics.drawable.Drawable
                              androidx.appcompat.widget.SuggestionsAdapter.getActivityIconWithCache(android.content.ComponentName)android.graphics.drawable.Drawable

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.cursoradapter.widget.CursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)android.view.View
                            androidx.appcompat.widget.SuggestionsAdapter.newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)android.view.View
                             androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache.<init>(android.view.View)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$3.run()void
                                                        androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback.call()java.lang.Object
                                                         androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback.call()androidx.core.text.PrecomputedTextCompat
                                                          androidx.core.text.PrecomputedTextCompat.create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)androidx.core.text.PrecomputedTextCompat
                                                           androidx.core.text.PrecomputedTextCompat.<init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[])void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.ToolbarWidgetWrapper.setDisplayOptions(int)void
                                              androidx.appcompat.widget.ToolbarWidgetWrapper.updateNavigationIcon()void
                                               androidx.appcompat.widget.Toolbar.setNavigationIcon(android.graphics.drawable.Drawable)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegate.markStarted(androidx.appcompat.app.AppCompatDelegate)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.view.menu.MenuBuilder.startDispatchingItemsChanged()void
                                        androidx.appcompat.view.menu.MenuBuilder.onItemsChanged(boolean)void
                                         androidx.appcompat.view.menu.MenuBuilder.dispatchPresenterUpdate(boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)void
                                           androidx.appcompat.widget.AppCompatImageView.setImageDrawable(android.graphics.drawable.Drawable)void
                                            androidx.appcompat.widget.AppCompatImageHelper.applySupportImageTint()void
                                             androidx.appcompat.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)boolean
                                              androidx.appcompat.widget.AppCompatDrawableManager.tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])void
                                               androidx.appcompat.widget.ResourceManagerInternal.<clinit>()void
                                                androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.<init>(int)void
                                                 androidx.collection.LruCache.<init>(int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                  androidx.core.graphics.drawable.WrappedDrawableState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                   androidx.core.graphics.drawable.WrappedDrawableApi14.<init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)void
                                                    androidx.core.graphics.drawable.WrappedDrawableApi14.updateLocalState(android.content.res.Resources)void
                                                     androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper.onPreparePanel(int,android.view.View,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onPreparePanel(int,android.view.View,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onPreparePanel(int,android.view.View,android.view.Menu)boolean
                                          androidx.fragment.app.FragmentController.dispatchPrepareOptionsMenu(android.view.Menu)boolean
                                           androidx.fragment.app.FragmentManagerImpl.dispatchPrepareOptionsMenu(android.view.Menu)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.getAutoTimeNightModeManager()androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager
      androidx.appcompat.app.TwilightManager.getInstance(android.content.Context)androidx.appcompat.app.TwilightManager
       androidx.appcompat.app.TwilightManager.<init>(android.content.Context,android.location.LocationManager)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.updateForNightMode(int,boolean)boolean
      androidx.appcompat.app.AppCompatDelegateImpl.updateResourcesConfigurationForNightMode(int,boolean)void
       androidx.appcompat.app.AppCompatActivity.onConfigurationChanged(android.content.res.Configuration)void
        androidx.appcompat.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration)void
         androidx.appcompat.widget.AppCompatDrawableManager.onConfigurationChanged(android.content.Context)void
          androidx.appcompat.widget.ResourceManagerInternal.onConfigurationChanged(android.content.Context)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal.getTintList(android.content.Context,int)android.content.res.ColorStateList
                                                         androidx.appcompat.widget.ResourceManagerInternal.getTintListFromCache(android.content.Context,int)android.content.res.ColorStateList

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatDelegateImpl.getMenuInflater()android.view.MenuInflater
                                            androidx.appcompat.app.AppCompatDelegateImpl.initWindowDecorActionBar()void
                                             androidx.appcompat.app.AppCompatDelegateImpl.ensureSubDecor()void
                                              androidx.appcompat.app.AppCompatDelegateImpl.invalidatePanelMenu(int)void
                                               androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable)void
                                                androidx.appcompat.widget.TooltipCompatHandler$1.run()void
                                                 androidx.appcompat.widget.TooltipCompatHandler.show(boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.<init>(android.view.View,java.lang.CharSequence)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.fragment.app.FragmentTransition$4.run()void
                                                                  androidx.fragment.app.FragmentTransitionCompat21.swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)void
                                                                   androidx.fragment.app.FragmentTransitionCompat21.replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)void
                                                                    androidx.fragment.app.FragmentTransitionCompat21.hasSimpleTarget(android.transition.Transition)boolean
                                                                     androidx.fragment.app.FragmentTransitionImpl.isNullOrEmpty(java.util.List)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.core.view.ViewCompat.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)void
           androidx.lifecycle.MediatorLiveData$Source.<init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context)void
                                           androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context,android.util.AttributeSet)void
                                            androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context,android.util.AttributeSet,int)void
                                             androidx.appcompat.widget.ActivityChooserView$4.<init>(androidx.appcompat.widget.ActivityChooserView,android.view.View)void
                                              androidx.appcompat.widget.ForwardingListener.<init>(android.view.View)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$LifecycleBoundObserver.detachObserver()void
              androidx.fragment.app.FragmentViewLifecycleOwner.getLifecycle()androidx.lifecycle.Lifecycle
               androidx.fragment.app.FragmentViewLifecycleOwner.initialize()void
                androidx.lifecycle.LifecycleRegistry.<init>(androidx.lifecycle.LifecycleOwner)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)void
                                                  androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)void
                                                   androidx.collection.LongSparseArray.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                  androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>()void
                                                   androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)void
                                                    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState.<init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat$4$4.<init>(androidx.core.provider.FontsContractCompat$4)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.widget.ShareActionProvider.onPrepareSubMenu(android.view.SubMenu)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter.<init>(androidx.appcompat.widget.Toolbar)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.fragment.app.FragmentManagerViewModel.shouldDestroy(androidx.fragment.app.Fragment)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)void
                                                  androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.onStateChange(int[])boolean
                                                   androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int)boolean
                                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition.<init>(android.graphics.drawable.Animatable)void
                                                     androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)void
                                                      androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.createDrawableIfNeeded(android.content.Context,int)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal.addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)boolean
                                                         androidx.collection.LongSparseArray.put(long,java.lang.Object)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)void
                                           androidx.appcompat.widget.AppCompatImageView.setImageDrawable(android.graphics.drawable.Drawable)void
                                            androidx.appcompat.widget.AppCompatImageHelper.applySupportImageTint()void
                                             androidx.appcompat.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)boolean
                                              androidx.appcompat.widget.AppCompatDrawableManager.tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])void
                                               androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])void
                                                androidx.appcompat.widget.ResourceManagerInternal.createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])android.graphics.PorterDuffColorFilter
                                                 androidx.appcompat.widget.ResourceManagerInternal.getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)android.graphics.PorterDuffColorFilter
                                                  androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.get(int,android.graphics.PorterDuff$Mode)android.graphics.PorterDuffColorFilter

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.app.ActivityRecreator$3.run()void
                                                        androidx.core.app.ActivityRecreator.<clinit>()void
                                                         androidx.core.app.ActivityRecreator.getMainThreadField()java.lang.reflect.Field

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.view.menu.MenuBuilder.flagActionItems()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                  androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>()void
                                                   androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)void
                                                    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState.<init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)void
                                                     androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getTargetByName(java.lang.String)java.lang.Object
                                                      androidx.collection.SimpleArrayMap.get(java.lang.Object)java.lang.Object
                                                       androidx.collection.SimpleArrayMap.getOrDefault(java.lang.Object,java.lang.Object)java.lang.Object
                                                        androidx.collection.SimpleArrayMap.indexOfKey(java.lang.Object)int
                                                         androidx.collection.SimpleArrayMap.indexOfNull()int
                                                          androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int)int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab)void
                          androidx.appcompat.widget.ScrollingTabContainerView$TabView.update()void
                           androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context,android.util.AttributeSet,int)void
                            androidx.appcompat.widget.AppCompatTextHelper.loadFromAttributes(android.util.AttributeSet,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  com.example.helloelitebook.TestED.ICanNotFindYou(android.content.Context)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)void
                                                  androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.onStateChange(int[])boolean
                                                   androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int)boolean
                                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.isTransitionReversed(int,int)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserModel.get(android.content.Context,java.lang.String)androidx.appcompat.widget.ActivityChooserModel

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatActivity.getDelegate()androidx.appcompat.app.AppCompatDelegate
                                            androidx.appcompat.app.AppCompatDelegate.create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)androidx.appcompat.app.AppCompatDelegate
                                             androidx.appcompat.app.AppCompatDelegateImpl.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                  androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>()void
                                                   androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)void
                                                    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState.<init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)void
                                                     androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getTargetByName(java.lang.String)java.lang.Object
                                                      androidx.collection.SimpleArrayMap.get(java.lang.Object)java.lang.Object
                                                       androidx.collection.SimpleArrayMap.getOrDefault(java.lang.Object,java.lang.Object)java.lang.Object
                                                        androidx.collection.SimpleArrayMap.indexOfKey(java.lang.Object)int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.<init>()void
                                                  androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.<init>()void
                                                   androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.widget.ShareActionProvider.onPrepareSubMenu(android.view.SubMenu)void
                                                              androidx.appcompat.widget.ActivityChooserModel.getActivity(int)android.content.pm.ResolveInfo

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1.run()void
                                     androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback.peekDrawer()void
                                      androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback.closeOtherDrawer()void
                                       androidx.drawerlayout.widget.DrawerLayout.closeDrawer(android.view.View)void
                                        androidx.drawerlayout.widget.DrawerLayout.closeDrawer(android.view.View,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.fragment.app.FragmentManagerImpl.popBackStack(int,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.MediatorLiveData.onInactive()void
               androidx.arch.core.internal.SafeIterableMap.iterator()java.util.Iterator

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer.initializeDrawableForDisplay(android.graphics.drawable.Drawable)void
                                   androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)void
                                           androidx.appcompat.widget.AppCompatImageView.setImageDrawable(android.graphics.drawable.Drawable)void
                                            androidx.appcompat.widget.AppCompatImageHelper.applySupportImageTint()void
                                             androidx.appcompat.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)boolean
                                              androidx.appcompat.widget.TintInfo.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])android.graphics.Typeface
                                                         androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                          androidx.core.graphics.TypefaceCompatApi24Impl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                           androidx.core.graphics.TypefaceCompatUtil.mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)java.nio.ByteBuffer

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.getDisabledThemeAttrColor(android.content.Context,int)int
                                                          androidx.appcompat.widget.ThemeUtils.getThemeAttrColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                           androidx.appcompat.widget.TintTypedArray.getColorStateList(int)android.content.res.ColorStateList
                                                            androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                             androidx.appcompat.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                              androidx.appcompat.content.res.AppCompatResources.isColorInt(android.content.Context,int)boolean
                                                               androidx.appcompat.content.res.AppCompatResources.getTypedValue()android.util.TypedValue

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$2.run()void
                                                        androidx.loader.content.ModernAsyncTask$2.call()java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.ListPopupWindow$ListSelectorHider.<init>(androidx.appcompat.widget.ListPopupWindow)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal.getTintList(android.content.Context,int)android.content.res.ColorStateList
                                                         androidx.appcompat.widget.ResourceManagerInternal.addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)void
                                                          androidx.collection.SparseArrayCompat.append(int,java.lang.Object)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab)void
                          androidx.appcompat.widget.ScrollingTabContainerView$TabView.update()void
                           androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context,android.util.AttributeSet,int)void
                            androidx.appcompat.widget.AppCompatTextHelper.loadFromAttributes(android.util.AttributeSet,int)void
                             androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int)void
                              androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatDelegateImpl.getMenuInflater()android.view.MenuInflater
                                            androidx.appcompat.app.AppCompatDelegateImpl.initWindowDecorActionBar()void
                                             androidx.appcompat.app.AppCompatDelegateImpl.ensureSubDecor()void
                                              androidx.appcompat.app.AppCompatDelegateImpl.invalidatePanelMenu(int)void
                                               androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.cursoradapter.widget.CursorAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatActivity.getDelegate()androidx.appcompat.app.AppCompatDelegate
                                            androidx.appcompat.app.AppCompatDelegate.create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)androidx.appcompat.app.AppCompatDelegate
                                             androidx.appcompat.app.AppCompatDelegateImpl.<clinit>()void
                                              androidx.appcompat.app.AppCompatDelegateImpl$1.<init>(java.lang.Thread$UncaughtExceptionHandler)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)void
                                                  androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)void
                                                   androidx.collection.SparseArrayCompat.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1.run()void
                                     androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback.peekDrawer()void
                                      androidx.customview.widget.ViewDragHelper.smoothSlideViewTo(android.view.View,int,int)boolean
                                       androidx.customview.widget.ViewDragHelper.forceSettleCapturedViewAt(int,int,int,int)boolean
                                        androidx.customview.widget.ViewDragHelper.computeSettleDuration(android.view.View,int,int,int,int)int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuBuilder.size()int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setNavigationOnClickListener(android.view.View$OnClickListener)void
                                              androidx.appcompat.widget.Toolbar.ensureNavButtonView()void
                                               androidx.appcompat.widget.AppCompatImageButton.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.AppCompatBackgroundHelper.<init>(android.view.View)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)androidx.core.provider.FontsContractCompat$FontFamilyResult
                                                         androidx.core.provider.FontsContractCompat.getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)androidx.core.provider.FontsContractCompat$FontInfo[]

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$2.run()void
                                                        androidx.loader.content.ModernAsyncTask$2.call()java.lang.Object
                                                         androidx.loader.content.AsyncTaskLoader$LoadTask.doInBackground(java.lang.Object[])java.lang.Object
                                                          androidx.loader.content.AsyncTaskLoader$LoadTask.doInBackground(java.lang.Void[])java.lang.Object
                                                           androidx.loader.content.ModernAsyncTask.isCancelled()boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onSaveInstanceState(android.os.Bundle)void
  androidx.fragment.app.FragmentActivity.onSaveInstanceState(android.os.Bundle)void
   androidx.activity.ComponentActivity.onSaveInstanceState(android.os.Bundle)void
    androidx.savedstate.SavedStateRegistryController.performSave(android.os.Bundle)void
     androidx.savedstate.SavedStateRegistry.performSave(android.os.Bundle)void
      androidx.collection.MapCollections$MapIterator.getKey()java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentActivity.onResume()void
  androidx.fragment.app.FragmentController.noteStateNotSaved()void
   androidx.fragment.app.FragmentManagerImpl.noteStateNotSaved()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.loader.app.LoaderManagerImpl$LoaderInfo.onInactive()void
               androidx.loader.content.Loader.stopLoading()void
                androidx.loader.content.CursorLoader.onStopLoading()void
                 androidx.loader.content.Loader.cancelLoad()boolean
                  androidx.loader.content.AsyncTaskLoader.onCancelLoad()boolean
                   androidx.loader.content.ModernAsyncTask.cancel(boolean)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab)void
                          androidx.appcompat.widget.ScrollingTabContainerView$TabView.update()void
                           androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context,android.util.AttributeSet,int)void
                            androidx.appcompat.widget.AppCompatTextHelper.<init>(android.widget.TextView)void
                             androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuBuilder.changeMenuMode()void
                    androidx.appcompat.view.StandaloneActionMode.onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)void
                     androidx.appcompat.view.StandaloneActionMode.invalidate()void
                      androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9.onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)boolean
                       androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper.onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)boolean
                        androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper.getActionModeWrapper(androidx.appcompat.view.ActionMode)android.view.ActionMode

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.view.menu.MenuBuilder.restoreActionViewStates(android.os.Bundle)void
                                        androidx.appcompat.view.menu.MenuBuilder.findItem(int)android.view.MenuItem

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal.getTintList(android.content.Context,int)android.content.res.ColorStateList
                                                         androidx.appcompat.widget.ResourceManagerInternal.addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)void
                                                          androidx.collection.SparseArrayCompat.append(int,java.lang.Object)void
                                                           androidx.collection.SparseArrayCompat.put(int,java.lang.Object)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                  androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>()void
                                                   androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.<init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)void
                                                    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1.<init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.widget.ShareActionProvider.onPrepareSubMenu(android.view.SubMenu)void
                                                              androidx.appcompat.widget.ActivityChooserModel.getActivityCount()int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.get()androidx.appcompat.widget.ResourceManagerInternal
                                                      androidx.appcompat.widget.ResourceManagerInternal.installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)void
                                                       androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])android.graphics.Typeface
                                                         androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                          androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                           androidx.core.graphics.TypefaceCompatBaseImpl.findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)androidx.core.provider.FontsContractCompat$FontInfo
                                                            androidx.core.graphics.TypefaceCompatBaseImpl$1.<init>(androidx.core.graphics.TypefaceCompatBaseImpl)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)androidx.core.provider.FontsContractCompat$FontFamilyResult
                                                         androidx.core.provider.FontsContractCompat.getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)androidx.core.provider.FontsContractCompat$FontInfo[]
                                                          androidx.core.provider.FontsContractCompat$FontInfo.<init>(android.net.Uri,int,int,boolean,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter.getItemViewType(int)int
                         androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter.getCount()int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.appcompat.app.AppCompatDelegateImpl.installViewFactory()void
    androidx.core.view.LayoutInflaterCompat.setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)void
     androidx.core.view.LayoutInflaterCompat.forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.core.widget.NestedScrollView.addView(android.view.View)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.getDisabledThemeAttrColor(android.content.Context,int)int
                                                          androidx.appcompat.widget.ThemeUtils.getThemeAttrColor(android.content.Context,int,float)int
                                                           androidx.core.graphics.ColorUtils.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setSubtitleTextAppearance(android.content.Context,int)void
                                              androidx.appcompat.widget.AppCompatTextView.setTextAppearance(android.content.Context,int)void
                                               androidx.appcompat.widget.AppCompatTextHelper.onSetTextAppearance(android.content.Context,int)void
                                                androidx.appcompat.widget.AppCompatTextView.setTypeface(android.graphics.Typeface,int)void
                                                 androidx.core.graphics.TypefaceCompat.create(android.content.Context,android.graphics.Typeface,int)android.graphics.Typeface

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.lifecycle.Lifecycle$State.<clinit>()void
     androidx.lifecycle.Lifecycle$State.<init>(java.lang.String,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuBuilder.changeMenuMode()void
                    androidx.appcompat.app.AppCompatDelegateImpl.onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)void
                     androidx.appcompat.app.AppCompatDelegateImpl.reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$3.run()void
                                                        androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback.call()java.lang.Object
                                                         androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback.call()androidx.core.text.PrecomputedTextCompat
                                                          androidx.core.text.PrecomputedTextCompat.create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)androidx.core.text.PrecomputedTextCompat

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])android.graphics.Typeface
                                                         androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                          androidx.core.graphics.TypefaceCompatApi24Impl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                           androidx.core.graphics.TypefaceCompatApi24Impl.newFamily()java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatDelegateImpl.getMenuInflater()android.view.MenuInflater
                                            androidx.appcompat.app.AppCompatDelegateImpl.initWindowDecorActionBar()void
                                             androidx.appcompat.app.AppCompatDelegateImpl.ensureSubDecor()void
                                              androidx.appcompat.app.AppCompatDelegateImpl.createSubDecor()android.view.ViewGroup

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab)void
                          androidx.appcompat.widget.ScrollingTabContainerView$TabView.update()void
                           androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context,android.util.AttributeSet,int)void
                            androidx.appcompat.widget.AppCompatTextClassifierHelper.<init>(android.widget.TextView)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onDestroy()void
  androidx.fragment.app.FragmentActivity.onDestroy()void
   androidx.lifecycle.LifecycleRegistry.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)void
    androidx.lifecycle.LifecycleRegistry.moveToState(androidx.lifecycle.Lifecycle$State)void
     androidx.lifecycle.LifecycleRegistry.sync()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.MenuPopupHelper.getPopup()androidx.appcompat.view.menu.MenuPopup
                      androidx.appcompat.view.menu.MenuPopupHelper.createPopup()androidx.appcompat.view.menu.MenuPopup
                       androidx.appcompat.view.menu.StandardMenuPopup.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean)void
                        androidx.appcompat.view.menu.MenuPopup.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setSubtitleTextAppearance(android.content.Context,int)void
                                              androidx.appcompat.widget.AppCompatTextView.setTextAppearance(android.content.Context,int)void
                                               androidx.appcompat.widget.AppCompatTextHelper.onSetTextAppearance(android.content.Context,int)void
                                                androidx.appcompat.widget.AppCompatTextView.setTypeface(android.graphics.Typeface,int)void
                                                 androidx.core.graphics.TypefaceCompat.<clinit>()void
                                                  androidx.core.graphics.TypefaceCompatApi24Impl.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter.collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)boolean
                                            androidx.appcompat.widget.Toolbar.addChildrenForExpandedActionView()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.ToolbarWidgetWrapper.setDisplayOptions(int)void
                                              androidx.appcompat.widget.Toolbar.setSubtitle(java.lang.CharSequence)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.appcompat.widget.SuggestionsAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void
                            androidx.appcompat.widget.AppCompatTextView.getText()java.lang.CharSequence
                             androidx.appcompat.widget.AppCompatTextView.consumeTextFutureAndSetBlocking()void
                              androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)void
                               androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView)androidx.core.text.PrecomputedTextCompat$Params
                                androidx.core.widget.TextViewCompat.getTextDirectionHeuristic(android.widget.TextView)android.text.TextDirectionHeuristic

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.fragment.app.FragmentActivity.onCreate(android.os.Bundle)void
    androidx.fragment.app.FragmentController.restoreSaveState(android.os.Parcelable)void
     androidx.fragment.app.FragmentManagerImpl.restoreSaveState(android.os.Parcelable)void
      androidx.fragment.app.BackStackState.instantiate(androidx.fragment.app.FragmentManagerImpl)androidx.fragment.app.BackStackRecord

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.MenuPopupHelper.getPopup()androidx.appcompat.view.menu.MenuPopup
                      androidx.appcompat.view.menu.MenuPopupHelper.createPopup()androidx.appcompat.view.menu.MenuPopup
                       androidx.appcompat.view.menu.StandardMenuPopup.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean)void
                        androidx.appcompat.widget.MenuPopupWindow.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemWrapperICS.getSubMenu()android.view.SubMenu
                                        androidx.appcompat.view.menu.BaseMenuWrapper.getSubMenuWrapper(android.view.SubMenu)android.view.SubMenu
                                         androidx.collection.SimpleArrayMap.put(java.lang.Object,java.lang.Object)java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStop()void
  androidx.fragment.app.FragmentActivity.onStop()void
   androidx.fragment.app.FragmentActivity.markFragmentsCreated()void
    androidx.fragment.app.FragmentActivity.markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.updateForNightMode(int,boolean)boolean
      androidx.appcompat.app.AppCompatDelegateImpl.isActivityManifestHandlingUiMode()boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.appcompat.widget.SuggestionsAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void
                            androidx.appcompat.widget.SuggestionsAdapter.getIcon2(android.database.Cursor)android.graphics.drawable.Drawable
                             androidx.appcompat.widget.SuggestionsAdapter.getDrawableFromResourceValue(java.lang.String)android.graphics.drawable.Drawable

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.MenuPopupHelper.getPopup()androidx.appcompat.view.menu.MenuPopup
                      androidx.appcompat.view.menu.MenuPopupHelper.createPopup()androidx.appcompat.view.menu.MenuPopup
                       androidx.appcompat.view.menu.CascadingMenuPopup.addMenu(androidx.appcompat.view.menu.MenuBuilder)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat$4$6.<init>(androidx.core.provider.FontsContractCompat$4)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onSaveInstanceState(android.os.Bundle)void
  androidx.fragment.app.FragmentActivity.onSaveInstanceState(android.os.Bundle)void
   androidx.fragment.app.FragmentController.saveAllState()android.os.Parcelable
    androidx.fragment.app.FragmentManagerImpl.saveAllState()android.os.Parcelable
     androidx.fragment.app.FragmentManagerState.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.fragment.app.FragmentActivity.onCreate(android.os.Bundle)void
    androidx.activity.ComponentActivity.onCreate(android.os.Bundle)void
     androidx.savedstate.SavedStateRegistryController.performRestore(android.os.Bundle)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackFailAsync(int,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$2.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.appcompat.widget.SuggestionsAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void
                            androidx.appcompat.widget.AppCompatTextView.getText()java.lang.CharSequence
                             androidx.appcompat.widget.AppCompatTextView.consumeTextFutureAndSetBlocking()void
                              androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuBuilder.getItem(int)android.view.MenuItem

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.fragment.app.FragmentTransitionImpl$2.run()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab)void
                          androidx.appcompat.widget.ScrollingTabContainerView$TabView.update()void
                           androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context,android.util.AttributeSet,int)void
                            androidx.appcompat.widget.AppCompatTextHelper.loadFromAttributes(android.util.AttributeSet,int)void
                             androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int)void
                              androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)void
                               androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.cleanupAutoSizePresetSizes(int[])int[]

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.Fragment.<init>()void
  androidx.fragment.app.FragmentManagerImpl.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.fragment.app.FragmentTransition$4.run()void
                                                                  androidx.fragment.app.FragmentTransitionCompat21.swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.appcompat.widget.AbsActionBarView$1.run()void
                                                        androidx.appcompat.widget.ActionBarContextView.showOverflowMenu()boolean
                                                         androidx.appcompat.widget.ActionMenuPresenter.showOverflowMenu()boolean
                                                          androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.<init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setSubtitleTextAppearance(android.content.Context,int)void
                                              androidx.appcompat.widget.AppCompatTextView.setTextAppearance(android.content.Context,int)void
                                               androidx.appcompat.widget.AppCompatTextHelper.onSetTextAppearance(android.content.Context,int)void
                                                androidx.appcompat.widget.AppCompatTextHelper.updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray)void
                                                 androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.<init>(androidx.appcompat.widget.AppCompatTextHelper,int,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.fragment.app.FragmentActivity.onCreate(android.os.Bundle)void
    androidx.fragment.app.FragmentController.restoreSaveState(android.os.Parcelable)void
     androidx.fragment.app.FragmentManagerImpl.restoreSaveState(android.os.Parcelable)void
      androidx.fragment.app.BackStackRecord.dump(java.lang.String,java.io.PrintWriter,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.updateForNightMode(int,boolean)boolean
      androidx.appcompat.app.AppCompatDelegateImpl.updateResourcesConfigurationForNightMode(int,boolean)void
       androidx.appcompat.app.ResourcesFlusher.flush(android.content.res.Resources)void
        androidx.appcompat.app.ResourcesFlusher.flushNougats(android.content.res.Resources)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setNavigationOnClickListener(android.view.View$OnClickListener)void
                                              androidx.appcompat.widget.Toolbar.ensureNavButtonView()void
                                               androidx.appcompat.widget.AppCompatImageButton.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.TintContextWrapper.wrap(android.content.Context)android.content.Context
                                                 androidx.appcompat.widget.TintContextWrapper.<init>(android.content.Context)void
                                                  androidx.appcompat.widget.TintResources.<init>(android.content.Context,android.content.res.Resources)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.FragmentManagerImpl$2.run()void
                                                        androidx.fragment.app.FragmentManagerImpl.execPendingActions()boolean
                                                         androidx.fragment.app.FragmentManagerImpl.updateOnBackPressedCallbackEnabled()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.<init>(android.view.View,java.lang.CharSequence)void
                                                     androidx.appcompat.widget.TooltipCompatHandler$2.<init>(androidx.appcompat.widget.TooltipCompatHandler)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.clear()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.<init>(android.view.View,java.lang.CharSequence)void
                                                     androidx.core.view.ViewConfigurationCompat.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.viewpager.widget.ViewPager$3.run()void
                                                        androidx.viewpager.widget.ViewPager.setScrollState(int)void
                                                         androidx.viewpager.widget.ViewPager.dispatchOnScrollStateChanged(int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onDestroy()void
  androidx.fragment.app.FragmentActivity.onDestroy()void
   androidx.lifecycle.LifecycleRegistry.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)void
    androidx.lifecycle.LifecycleRegistry.getStateAfter(androidx.lifecycle.Lifecycle$Event)androidx.lifecycle.Lifecycle$State
     androidx.lifecycle.LifecycleRegistry$1.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.fragment.app.FragmentActivity.onCreate(android.os.Bundle)void
    androidx.fragment.app.FragmentController.attachHost(androidx.fragment.app.Fragment)void
     androidx.fragment.app.FragmentManagerImpl.attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback.<init>(androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback,java.lang.ref.WeakReference,android.graphics.Typeface)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.MenuPopupHelper.getPopup()androidx.appcompat.view.menu.MenuPopup
                      androidx.appcompat.view.menu.MenuPopupHelper.createPopup()androidx.appcompat.view.menu.MenuPopup
                       androidx.appcompat.view.menu.StandardMenuPopup.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean)void
                        androidx.appcompat.view.menu.StandardMenuPopup$1.<init>(androidx.appcompat.view.menu.StandardMenuPopup)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.widget.ShareActionProvider.onPrepareSubMenu(android.view.SubMenu)void
                                                              androidx.appcompat.widget.ActivityChooserModel.getActivity(int)android.content.pm.ResolveInfo
                                                               androidx.appcompat.widget.ActivityChooserModel.ensureConsistentState()void
                                                                androidx.appcompat.widget.ActivityChooserModel.loadActivitiesIfNeeded()boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.<init>()void
  androidx.appcompat.app.AppCompatActivity.<init>()void
   androidx.fragment.app.FragmentActivity.<init>()void
    androidx.fragment.app.FragmentController.createController(androidx.fragment.app.FragmentHostCallback)androidx.fragment.app.FragmentController
     androidx.fragment.app.FragmentController.<init>(androidx.fragment.app.FragmentHostCallback)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.ToolbarWidgetWrapper.setDisplayOptions(int)void
                                              androidx.appcompat.widget.Toolbar.setTitle(java.lang.CharSequence)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onDestroy()void
  androidx.fragment.app.FragmentActivity.onDestroy()void
   androidx.lifecycle.Lifecycle$Event.<clinit>()void
    androidx.lifecycle.Lifecycle$Event.<init>(java.lang.String,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.core.content.ContextCompat.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourcesWrapper.getDrawable(int)android.graphics.drawable.Drawable
                                                         androidx.appcompat.widget.VectorEnabledTintResources.getDrawable(int)android.graphics.drawable.Drawable

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.mutate()void
                                        androidx.collection.SparseArrayCompat.clone()androidx.collection.SparseArrayCompat

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContextView.setVisibility(int)void
                               androidx.appcompat.widget.AbsActionBarView.setVisibility(int)void
                                androidx.core.view.ViewPropertyAnimatorCompat.cancel()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])android.graphics.Typeface
                                                         androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                          androidx.core.graphics.TypefaceCompatApi26Impl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat$4$2.<init>(androidx.core.provider.FontsContractCompat$4)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$2.run()void
                                                        androidx.loader.content.ModernAsyncTask$2.call()java.lang.Object
                                                         androidx.loader.content.AsyncTaskLoader$LoadTask.doInBackground(java.lang.Object[])java.lang.Object
                                                          androidx.loader.content.AsyncTaskLoader$LoadTask.doInBackground(java.lang.Void[])java.lang.Object
                                                           androidx.loader.content.AsyncTaskLoader.onLoadInBackground()java.lang.Object
                                                            androidx.loader.content.CursorLoader.loadInBackground()java.lang.Object
                                                             androidx.loader.content.CursorLoader.loadInBackground()android.database.Cursor
                                                              androidx.core.os.CancellationSignal.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemWrapperICS.getSubMenu()android.view.SubMenu
                                        androidx.appcompat.view.menu.BaseMenuWrapper.getSubMenuWrapper(android.view.SubMenu)android.view.SubMenu

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context)void
                                           androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context,android.util.AttributeSet)void
                                            androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context,android.util.AttributeSet,int)void
                                             androidx.appcompat.widget.ActivityChooserView$Callbacks.<init>(androidx.appcompat.widget.ActivityChooserView)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuBuilder.dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.getThemeAttrColor(android.content.Context,int)int
                                                          androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])androidx.appcompat.widget.TintTypedArray
                                                           androidx.appcompat.widget.TintTypedArray.<init>(android.content.Context,android.content.res.TypedArray)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.fragment.app.FragmentTransition$4.run()void
                                                                  androidx.fragment.app.FragmentTransitionCompat21.swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)void
                                                                   androidx.fragment.app.FragmentTransitionCompat21.replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$2.run()void
                                                        androidx.loader.content.ModernAsyncTask$2.call()java.lang.Object
                                                         androidx.loader.content.ModernAsyncTask.postResult(java.lang.Object)java.lang.Object
                                                          androidx.loader.content.ModernAsyncTask$AsyncTaskResult.<init>(androidx.loader.content.ModernAsyncTask,java.lang.Object[])void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.setContentWidth(int)void
                        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.getPadding(android.graphics.Rect)boolean
                         androidx.appcompat.graphics.drawable.DrawableContainer.getPadding(android.graphics.Rect)boolean
                          androidx.appcompat.graphics.drawable.DrawableContainer.needsMirroring()boolean
                           androidx.core.graphics.drawable.DrawableCompat.getLayoutDirection(android.graphics.drawable.Drawable)int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.MenuPopupHelper.getPopup()androidx.appcompat.view.menu.MenuPopup
                      androidx.appcompat.view.menu.MenuPopupHelper.createPopup()androidx.appcompat.view.menu.MenuPopup
                       androidx.appcompat.view.menu.CascadingMenuPopup.<init>(android.content.Context,android.view.View,int,int,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ViewStubCompat.setVisibility(int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.app.ActivityRecreator$3.run()void
                                                        androidx.core.app.ActivityRecreator.<clinit>()void
                                                         androidx.core.app.ActivityRecreator.getPerformStopActivity3Params(java.lang.Class)java.lang.reflect.Method

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$2.run()void
                                                        androidx.loader.content.ModernAsyncTask$2.call()java.lang.Object
                                                         androidx.loader.content.AsyncTaskLoader$LoadTask.doInBackground(java.lang.Object[])java.lang.Object
                                                          androidx.loader.content.AsyncTaskLoader$LoadTask.doInBackground(java.lang.Void[])java.lang.Object
                                                           androidx.loader.content.AsyncTaskLoader.onLoadInBackground()java.lang.Object
                                                            androidx.loader.content.CursorLoader.loadInBackground()java.lang.Object
                                                             androidx.loader.content.CursorLoader.loadInBackground()android.database.Cursor
                                                              androidx.core.content.ContentResolverCompat.query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal)android.database.Cursor
                                                               androidx.core.os.OperationCanceledException.<init>()void
                                                                androidx.core.os.OperationCanceledException.<init>(java.lang.String)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  com.example.helloelitebook.TestED.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.widget.ShareActionProvider.onPrepareSubMenu(android.view.SubMenu)void
                                                              androidx.appcompat.widget.ActivityChooserModel.getActivity(int)android.content.pm.ResolveInfo
                                                               androidx.appcompat.widget.ActivityChooserModel.ensureConsistentState()void
                                                                androidx.appcompat.widget.ActivityChooserModel.sortActivitiesIfNeeded()boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl.closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)void
                                        androidx.appcompat.app.AppCompatDelegateImpl.callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)void
                                         androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onPanelClosed(int,android.view.Menu)void
                                          androidx.appcompat.app.AppCompatDelegateImpl.onPanelClosed(int)void
                                           androidx.appcompat.app.WindowDecorActionBar.dispatchMenuVisibilityChanged(boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStop()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStop()void
   androidx.appcompat.app.WindowDecorActionBar.setShowHideAnimationEnabled(boolean)void
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet.cancel()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.ToolbarWidgetWrapper$1.<init>(androidx.appcompat.widget.ToolbarWidgetWrapper)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])android.graphics.Typeface
                                                         androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                          androidx.core.graphics.TypefaceCompatApi24Impl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                           androidx.core.graphics.TypefaceCompatApi24Impl.addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.<clinit>()void
                 androidx.arch.core.executor.ArchTaskExecutor$1.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$1.<init>(androidx.appcompat.graphics.drawable.DrawableContainer)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.SubMenuBuilder.getActionViewStatesKey()java.lang.String

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])android.graphics.Typeface
                                                         androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                          androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                           androidx.core.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable)void
                                                            androidx.core.util.LogWriter.close()void
                                                             androidx.core.util.LogWriter.flushBuilder()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable.<init>(androidx.appcompat.widget.ListPopupWindow)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.Fragment.<init>()void
  androidx.lifecycle.MutableLiveData.<init>()void
   androidx.lifecycle.LiveData.<init>()void
    androidx.lifecycle.LiveData$1.<init>(androidx.lifecycle.LiveData)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.fragment.app.FragmentTransition$1.run()void
                                                           androidx.fragment.app.FragmentTransition.setViewVisibility(java.util.ArrayList,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.view.menu.MenuAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.view.menu.MenuAdapter.getItem(int)androidx.appcompat.view.menu.MenuItemImpl

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           androidx.loader.content.ModernAsyncTask.executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])androidx.loader.content.ModernAsyncTask
                            androidx.loader.content.ModernAsyncTask$Status.<clinit>()void
                             androidx.loader.content.ModernAsyncTask$Status.<init>(java.lang.String,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl.closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)void
                                        androidx.appcompat.app.AppCompatDelegateImpl.checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.dismissPopups()void
                                          androidx.appcompat.widget.ToolbarWidgetWrapper.dismissPopupMenus()void
                                           androidx.appcompat.widget.Toolbar.dismissPopupMenus()void
                                            androidx.appcompat.widget.ActionMenuView.dismissPopupMenus()void
                                             androidx.appcompat.widget.ActionMenuPresenter.dismissPopupMenus()boolean
                                              androidx.appcompat.widget.ActionMenuPresenter.hideOverflowMenu()boolean
                                               androidx.appcompat.view.menu.MenuPopupHelper.dismiss()void
                                                androidx.appcompat.view.menu.CascadingMenuPopup.dismiss()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.dismissPopup()boolean
                                            androidx.appcompat.widget.ListPopupWindow.dismiss()void
                                             androidx.appcompat.widget.ListPopupWindow.removePromptView()void
                                              androidx.constraintlayout.widget.ConstraintLayout.removeView(android.view.View)void
                                               androidx.constraintlayout.widget.ConstraintLayout.onViewRemoved(android.view.View)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.loader.app.LoaderManagerImpl$LoaderObserver.onChanged(java.lang.Object)void
          androidx.loader.content.Loader.dataToString(java.lang.Object)java.lang.String

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatActivity.getDelegate()androidx.appcompat.app.AppCompatDelegate
                                            androidx.appcompat.app.AppCompatDelegate.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.loader.app.LoaderManagerImpl$LoaderInfo.onInactive()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserModel.get(android.content.Context,java.lang.String)androidx.appcompat.widget.ActivityChooserModel
                                           androidx.appcompat.widget.ActivityChooserModel.<init>(android.content.Context,java.lang.String)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.app.ActivityRecreator$3.run()void
                                                        androidx.core.app.ActivityRecreator.<clinit>()void
                                                         androidx.core.app.ActivityRecreator.getPerformStopActivity2Params(java.lang.Class)java.lang.reflect.Method

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.fragment.app.Fragment$4.onFindViewById(int)android.view.View

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.SuggestionsAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.appcompat.widget.SuggestionsAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void
                            androidx.appcompat.widget.AppCompatTextView.getText()java.lang.CharSequence
                             androidx.appcompat.widget.AppCompatTextView.consumeTextFutureAndSetBlocking()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat$4$7.<init>(androidx.core.provider.FontsContractCompat$4,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         androidx.fragment.app.Fragment$3.<init>(androidx.fragment.app.Fragment)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.get()androidx.appcompat.widget.ResourceManagerInternal
                                                      androidx.appcompat.widget.ResourceManagerInternal.installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)void
                                                       androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.createDrawableIfNeeded(android.content.Context,int)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal.getCachedDrawable(android.content.Context,long)android.graphics.drawable.Drawable

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl.closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)void
                                        androidx.appcompat.app.AppCompatDelegateImpl.callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)void
                                         androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onPanelClosed(int,android.view.Menu)void
                                          androidx.appcompat.app.AppCompatDelegateImpl.onPanelClosed(int)void
                                           androidx.appcompat.app.ToolbarActionBar.dispatchMenuVisibilityChanged(boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.CascadingMenuPopup.show()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)void
                                                  androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)void
                                                   androidx.collection.SparseArrayCompat.<init>()void
                                                    androidx.collection.SparseArrayCompat.<init>(int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemWrapperICS.getSubMenu()android.view.SubMenu
                                        androidx.appcompat.view.menu.BaseMenuWrapper.getSubMenuWrapper(android.view.SubMenu)android.view.SubMenu
                                         androidx.appcompat.view.menu.SubMenuWrapperICS.<init>(android.content.Context,androidx.core.internal.view.SupportSubMenu)void
                                          androidx.appcompat.view.menu.MenuWrapperICS.<init>(android.content.Context,androidx.core.internal.view.SupportMenu)void
                                           androidx.appcompat.view.menu.BaseMenuWrapper.<init>(android.content.Context)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onDestroy()void
  androidx.fragment.app.FragmentActivity.onDestroy()void
   androidx.lifecycle.LifecycleRegistry.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)void
    androidx.lifecycle.LifecycleRegistry.getStateAfter(androidx.lifecycle.Lifecycle$Event)androidx.lifecycle.Lifecycle$State

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStop()void
  androidx.fragment.app.FragmentActivity.onStop()void
   androidx.fragment.app.FragmentActivity.markFragmentsCreated()void
    androidx.fragment.app.FragmentActivity.markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)boolean
     androidx.fragment.app.Fragment.getChildFragmentManager()androidx.fragment.app.FragmentManager

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.Toolbar.ensureMenuView()void
                                           androidx.appcompat.widget.Toolbar.addSystemView(android.view.View,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$6.run()void
                                     androidx.core.view.ViewPropertyAnimatorCompat.setListener(androidx.core.view.ViewPropertyAnimatorListener)androidx.core.view.ViewPropertyAnimatorCompat

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.<init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,androidx.fragment.app.Fragment)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.fragment.app.FragmentTransition$1.run()void
                                                           androidx.fragment.app.FragmentTransition.<clinit>()void
                                                            androidx.fragment.app.FragmentTransition.resolveSupportImpl()androidx.fragment.app.FragmentTransitionImpl

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.ContextThemeWrapper.getResources()android.content.res.Resources
                      androidx.appcompat.view.ContextThemeWrapper.getResourcesInternal()android.content.res.Resources
                       androidx.appcompat.app.AppCompatActivity.getResources()android.content.res.Resources
                        androidx.appcompat.widget.VectorEnabledTintResources.<init>(android.content.Context,android.content.res.Resources)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab)void
                          androidx.appcompat.widget.ScrollingTabContainerView$TabView.update()void
                           androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context,android.util.AttributeSet,int)void
                            androidx.appcompat.widget.AppCompatTextHelper.loadFromAttributes(android.util.AttributeSet,int)void
                             androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize()int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.get()androidx.appcompat.widget.ResourceManagerInternal
                                                      androidx.appcompat.widget.ResourceManagerInternal.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegate.markStarted(androidx.appcompat.app.AppCompatDelegate)void
    androidx.collection.ArraySet.add(java.lang.Object)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatDelegateImpl.getMenuInflater()android.view.MenuInflater
                                            androidx.appcompat.app.AppCompatDelegateImpl.initWindowDecorActionBar()void
                                             androidx.appcompat.app.WindowDecorActionBar.<init>(android.app.Dialog)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.Fragment.<init>()void
  androidx.fragment.app.FragmentManagerImpl.<init>()void
   androidx.fragment.app.FragmentManagerImpl$2.<init>(androidx.fragment.app.FragmentManagerImpl)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatDelegateImpl.getMenuInflater()android.view.MenuInflater
                                            androidx.appcompat.app.AppCompatDelegateImpl.initWindowDecorActionBar()void
                                             androidx.appcompat.app.WindowDecorActionBar.<init>(android.app.Activity,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onSaveInstanceState(android.os.Bundle)void
  androidx.fragment.app.FragmentActivity.onSaveInstanceState(android.os.Bundle)void
   androidx.fragment.app.FragmentController.saveAllState()android.os.Parcelable
    androidx.fragment.app.FragmentManagerImpl.saveAllState()android.os.Parcelable
     androidx.fragment.app.BackStackState.<init>(androidx.fragment.app.BackStackRecord)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.widget.ContentLoadingProgressBar$2.run()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatActivity.getDelegate()androidx.appcompat.app.AppCompatDelegate
                                            androidx.appcompat.app.AppCompatDelegate.create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)androidx.appcompat.app.AppCompatDelegate
                                             androidx.appcompat.app.AppCompatDelegateImpl.<init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback)void
                                              androidx.appcompat.app.AppCompatDelegateImpl.<init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)void
                                           androidx.appcompat.widget.AppCompatImageView.setImageDrawable(android.graphics.drawable.Drawable)void
                                            androidx.appcompat.widget.AppCompatImageHelper.applySupportImageTint()void
                                             androidx.appcompat.widget.DrawableUtils.fixDrawable(android.graphics.drawable.Drawable)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$LifecycleBoundObserver.detachObserver()void
              androidx.lifecycle.LifecycleRegistry.removeObserver(androidx.lifecycle.LifecycleObserver)void
               androidx.arch.core.internal.FastSafeIterableMap.remove(java.lang.Object)java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat$4$1.<init>(androidx.core.provider.FontsContractCompat$4)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         androidx.fragment.app.Fragment.ensureAnimationInfo()androidx.fragment.app.Fragment$AnimationInfo
                                                          androidx.fragment.app.Fragment$AnimationInfo.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.loader.app.LoaderManagerImpl$LoaderInfo.onActive()void
               androidx.loader.content.Loader.startLoading()void
                androidx.loader.content.CursorLoader.onStartLoading()void
                 androidx.loader.content.CursorLoader.deliverResult(android.database.Cursor)void
                  androidx.loader.content.Loader.deliverResult(java.lang.Object)void
                   androidx.loader.app.LoaderManagerImpl$LoaderInfo.onLoadComplete(androidx.loader.content.Loader,java.lang.Object)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])android.graphics.Typeface
                                                         androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                          androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                           androidx.core.graphics.TypefaceCompatBaseImpl.createFromInputStream(android.content.Context,java.io.InputStream)android.graphics.Typeface
                                                            androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File,java.io.InputStream)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.<init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)void
                                           androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.<init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.loader.app.LoaderManagerImpl$LoaderInfo.onInactive()void
               androidx.loader.content.Loader.stopLoading()void
                androidx.loader.content.CursorLoader.onStopLoading()void
                 androidx.loader.content.Loader.cancelLoad()boolean
                  androidx.loader.content.AsyncTaskLoader.onCancelLoad()boolean
                   androidx.loader.content.CursorLoader.cancelLoadInBackground()void
                    androidx.core.os.CancellationSignal.cancel()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.view.menu.MenuBuilder.restoreActionViewStates(android.os.Bundle)void
                                        androidx.appcompat.view.menu.MenuItemImpl.expandActionView()boolean
                                         androidx.appcompat.view.menu.SubMenuBuilder.expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)boolean
                                          androidx.appcompat.view.menu.MenuBuilder.expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.clear()void
                                       androidx.appcompat.view.menu.MenuBuilder.collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab)void
                          androidx.appcompat.widget.ScrollingTabContainerView$TabView.update()void
                           androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context,android.util.AttributeSet,int)void
                            androidx.appcompat.widget.AppCompatTextHelper.loadFromAttributes(android.util.AttributeSet,int)void
                             androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity()int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  com.example.helloelitebook.TestEE.canYouFindMe(android.content.Context)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.customview.widget.ViewDragHelper$2.run()void
                   androidx.customview.widget.ViewDragHelper.setDragState(int)void
                    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback.onViewDragStateChanged(int)void
                     androidx.drawerlayout.widget.DrawerLayout.updateDrawerState(int,int,android.view.View)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)android.graphics.drawable.Drawable
                                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
                                                          androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)void
                                                           androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.loader.app.LoaderManagerImpl$LoaderInfo.onActive()void
               androidx.loader.content.Loader.startLoading()void
                androidx.loader.content.CursorLoader.onStartLoading()void
                 androidx.loader.content.Loader.forceLoad()void
                  androidx.loader.content.AsyncTaskLoader.onForceLoad()void
                   androidx.loader.content.AsyncTaskLoader$LoadTask.<init>(androidx.loader.content.AsyncTaskLoader)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.getInstance()androidx.arch.core.executor.ArchTaskExecutor
                 androidx.arch.core.executor.ArchTaskExecutor.<init>()void
                  androidx.arch.core.executor.DefaultTaskExecutor.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.app.ActivityRecreator$3.run()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab)void
                          androidx.appcompat.widget.ScrollingTabContainerView$TabView.update()void
                           androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context,android.util.AttributeSet,int)void
                            androidx.appcompat.widget.AppCompatTextHelper.<init>(android.widget.TextView)void
                             androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.<init>(android.widget.TextView)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab)void
                          androidx.appcompat.widget.ScrollingTabContainerView$TabView.update()void
                           androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context,android.util.AttributeSet,int)void
                            androidx.appcompat.widget.AppCompatTextHelper.<init>(android.widget.TextView)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)void
                                                  androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)void
                                                   androidx.collection.LongSparseArray.<init>()void
                                                    androidx.collection.LongSparseArray.<init>(int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)androidx.core.provider.FontsContractCompat$FontFamilyResult
                                                         androidx.core.provider.FontsContractCompat.getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)androidx.core.provider.FontsContractCompat$FontInfo[]
                                                          androidx.core.provider.FontsContractCompat$FontInfo.<init>(android.net.Uri,int,int,boolean,int)void
                                                           androidx.core.util.Preconditions.checkNotNull(java.lang.Object)java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.MenuPopupHelper.getPopup()androidx.appcompat.view.menu.MenuPopup
                      androidx.appcompat.view.menu.MenuPopupHelper.createPopup()androidx.appcompat.view.menu.MenuPopup

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.loader.app.LoaderManagerImpl$LoaderInfo.onActive()void
               androidx.loader.content.Loader.startLoading()void
                androidx.loader.content.CursorLoader.onStartLoading()void
                 androidx.loader.content.Loader.forceLoad()void
                  androidx.loader.content.AsyncTaskLoader.onForceLoad()void
                   androidx.loader.content.AsyncTaskLoader$LoadTask.<init>(androidx.loader.content.AsyncTaskLoader)void
                    androidx.loader.content.ModernAsyncTask.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.arch.core.internal.SafeIterableMap.iteratorWithAdditions()androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.<init>(androidx.fragment.app.FragmentManagerImpl$3)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.app.ActivityRecreator$3.run()void
                                                        androidx.core.app.ActivityRecreator.<clinit>()void
                                                         androidx.core.app.ActivityRecreator.getRequestRelaunchActivityMethod(java.lang.Class)java.lang.reflect.Method

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.fragment.app.FragmentTransition$3.run()void
                                                                  androidx.fragment.app.FragmentTransition.callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setNavigationOnClickListener(android.view.View$OnClickListener)void
                                              androidx.appcompat.widget.Toolbar.ensureNavButtonView()void
                                               androidx.appcompat.widget.AppCompatImageButton.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.TintContextWrapper.wrap(android.content.Context)android.content.Context

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)void
                                           androidx.appcompat.widget.AppCompatImageView.setImageDrawable(android.graphics.drawable.Drawable)void
                                            androidx.appcompat.widget.AppCompatImageHelper.applySupportImageTint()void
                                             androidx.appcompat.widget.AppCompatImageHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)boolean
                                              androidx.appcompat.widget.AppCompatDrawableManager.tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])void
                                               androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])void
                                                androidx.appcompat.widget.ResourceManagerInternal.createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])android.graphics.PorterDuffColorFilter
                                                 androidx.appcompat.widget.ResourceManagerInternal.getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)android.graphics.PorterDuffColorFilter
                                                  androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)android.graphics.PorterDuffColorFilter

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.appcompat.app.AppCompatDelegateImpl.onCreate(android.os.Bundle)void
    androidx.core.app.NavUtils.getParentActivityName(android.app.Activity)java.lang.String

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatDelegateImpl.getMenuInflater()android.view.MenuInflater
                                            androidx.appcompat.app.AppCompatDelegateImpl.initWindowDecorActionBar()void
                                             androidx.appcompat.app.WindowDecorActionBar.<init>(android.app.Dialog)void
                                              androidx.appcompat.app.WindowDecorActionBar$3.<init>(androidx.appcompat.app.WindowDecorActionBar)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)android.graphics.drawable.Drawable
                                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
                                                          androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)void
                                                           androidx.core.graphics.drawable.DrawableCompat.inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)void
                                                            androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)void
                                                             androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuBuilder.changeMenuMode()void
                    androidx.appcompat.view.StandaloneActionMode.onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)void
                     androidx.appcompat.view.StandaloneActionMode.invalidate()void
                      androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9.onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)boolean
                       androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper.onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)boolean
                        androidx.core.widget.TextViewCompat$OreoCallback.onPrepareActionMode(android.view.ActionMode,android.view.Menu)boolean
                         androidx.core.widget.TextViewCompat$OreoCallback.recomputeProcessTextMenuItems(android.view.Menu)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.updateForNightMode(int,boolean)boolean
      androidx.appcompat.app.AppCompatDelegateImpl.updateResourcesConfigurationForNightMode(int,boolean)void
       androidx.appcompat.app.AppCompatActivity.onConfigurationChanged(android.content.res.Configuration)void
        androidx.appcompat.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration)void
         androidx.appcompat.widget.AppCompatDrawableManager.get()androidx.appcompat.widget.AppCompatDrawableManager
          androidx.appcompat.widget.AppCompatDrawableManager.preload()void
           androidx.appcompat.widget.AppCompatDrawableManager.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.arch.core.internal.SafeIterableMap.remove(java.lang.Object)java.lang.Object
            androidx.arch.core.internal.SafeIterableMap.get(java.lang.Object)androidx.arch.core.internal.SafeIterableMap$Entry

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$2.run()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.LiveData$LifecycleBoundObserver.shouldBeActive()boolean
          androidx.lifecycle.Lifecycle$State.isAtLeast(androidx.lifecycle.Lifecycle$State)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.core.content.ContextCompat.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.TintResources.getDrawable(int)android.graphics.drawable.Drawable

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate.createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)android.graphics.drawable.Drawable
                                                         androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.SubMenuBuilder.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)void
                                                              androidx.appcompat.view.menu.MenuBuilder.<init>(android.content.Context)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.loader.app.LoaderManagerImpl$LoaderInfo.onActive()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.updateForNightMode(int,boolean)boolean
      androidx.appcompat.app.AppCompatDelegateImpl.updateResourcesConfigurationForNightMode(int,boolean)void
       androidx.fragment.app.FragmentActivity.onConfigurationChanged(android.content.res.Configuration)void
        androidx.fragment.app.FragmentController.dispatchConfigurationChanged(android.content.res.Configuration)void
         androidx.fragment.app.FragmentManagerImpl.dispatchConfigurationChanged(android.content.res.Configuration)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context)void
                                           androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context,android.util.AttributeSet)void
                                            androidx.appcompat.widget.ActivityChooserView.<init>(android.content.Context,android.util.AttributeSet,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int)android.graphics.drawable.Drawable
                                                        androidx.core.text.PrecomputedTextCompat.toString()java.lang.String

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.fragment.app.FragmentTransitionImpl$1.run()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setContentInsetsRelative(int,int)void
                                              androidx.appcompat.widget.Toolbar.ensureContentInsets()void
                                               androidx.appcompat.widget.RtlSpacingHelper.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.updateForNightMode(int,boolean)boolean
      androidx.appcompat.app.AppCompatDelegateImpl.updateResourcesConfigurationForNightMode(int,boolean)void
       androidx.appcompat.app.ResourcesFlusher.flush(android.content.res.Resources)void
        androidx.appcompat.app.ResourcesFlusher.flushLollipops(android.content.res.Resources)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.fragment.app.FragmentController.dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)boolean
                                           androidx.fragment.app.FragmentManagerImpl.dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.appcompat.widget.AbsActionBarView$1.run()void
                                                        androidx.appcompat.widget.ActionBarContextView.showOverflowMenu()boolean
                                                         androidx.appcompat.widget.ActionMenuPresenter.showOverflowMenu()boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.core.content.ContextCompat.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.close(boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.appcompat.widget.SuggestionsAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void
                            androidx.appcompat.widget.SuggestionsAdapter.getIcon1(android.database.Cursor)android.graphics.drawable.Drawable
                             androidx.appcompat.widget.SuggestionsAdapter.getDefaultIcon1(android.database.Cursor)android.graphics.drawable.Drawable
                              androidx.appcompat.widget.SuggestionsAdapter.getActivityIconWithCache(android.content.ComponentName)android.graphics.drawable.Drawable
                               androidx.appcompat.widget.SuggestionsAdapter.getActivityIcon(android.content.ComponentName)android.graphics.drawable.Drawable

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.getDisabledThemeAttrColor(android.content.Context,int)int
                                                          androidx.appcompat.widget.ThemeUtils.getThemeAttrColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                           androidx.appcompat.widget.TintTypedArray.getColorStateList(int)android.content.res.ColorStateList
                                                            androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                             androidx.appcompat.content.res.AppCompatResources.inflateColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                              androidx.core.content.res.ColorStateListInflaterCompat.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)android.content.res.ColorStateList
                                                               org.xmlpull.v1.XmlPullParserException.<init>(java.lang.String)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.getAutoBatteryNightModeManager()androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager
      androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager.<init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)void
       androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager.<init>(androidx.appcompat.app.AppCompatDelegateImpl)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.FragmentManagerImpl$2.run()void
                                                        androidx.fragment.app.FragmentManagerImpl.execPendingActions()boolean
                                                         androidx.fragment.app.FragmentManagerImpl.removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onDestroy()void
  androidx.fragment.app.FragmentActivity.onDestroy()void
   androidx.fragment.app.FragmentController.dispatchDestroy()void
    androidx.fragment.app.FragmentManagerImpl.dispatchDestroy()void
     androidx.activity.OnBackPressedCallback.remove()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)androidx.core.provider.FontsContractCompat$FontFamilyResult
                                                         androidx.core.provider.FontsContractCompat.getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)android.content.pm.ProviderInfo

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.showPopupUnchecked(int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.<init>()void
  androidx.appcompat.app.AppCompatActivity.<init>()void
   androidx.fragment.app.FragmentActivity.<init>()void
    androidx.activity.ComponentActivity.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.fragment.app.FragmentTransition$4.run()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.view.menu.MenuAdapter.getCount()int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.fragment.app.FragmentManagerViewModel.clearNonConfigState(androidx.fragment.app.Fragment)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$2.run()void
                                                        androidx.core.provider.FontsContractCompat$1.call()java.lang.Object
                                                         androidx.core.provider.FontsContractCompat$1.call()androidx.core.provider.FontsContractCompat$TypefaceResult
                                                          androidx.collection.LruCache.put(java.lang.Object,java.lang.Object)java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.widget.ShareActionProvider.onPrepareSubMenu(android.view.SubMenu)void
                                                              androidx.appcompat.view.menu.MenuBuilder.add(int,int,int,java.lang.CharSequence)android.view.MenuItem
                                                               androidx.appcompat.view.menu.MenuBuilder.addInternal(int,int,int,java.lang.CharSequence)android.view.MenuItem

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.fragment.app.FragmentManagerViewModel.clearNonConfigState(androidx.fragment.app.Fragment)void
     androidx.lifecycle.ViewModelStore.clear()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)androidx.core.provider.FontsContractCompat$FontFamilyResult
                                                         androidx.core.provider.FontsContractCompat$FontFamilyResult.<init>(int,androidx.core.provider.FontsContractCompat$FontInfo[])void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setNavigationOnClickListener(android.view.View$OnClickListener)void
                                              androidx.appcompat.widget.Toolbar.ensureNavButtonView()void
                                               androidx.appcompat.widget.AppCompatImageButton.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.AppCompatImageHelper.<init>(android.widget.ImageView)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.viewpager.widget.ViewPager$3.run()void
                                                        androidx.viewpager.widget.ViewPager.populate()void
                                                         androidx.viewpager.widget.ViewPager.populate(int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.cursoradapter.widget.SimpleCursorAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.MenuPopupHelper.getPopup()androidx.appcompat.view.menu.MenuPopup
                      androidx.appcompat.view.menu.MenuPopupHelper.createPopup()androidx.appcompat.view.menu.MenuPopup
                       androidx.appcompat.view.menu.StandardMenuPopup.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean)void
                        androidx.appcompat.view.menu.StandardMenuPopup$2.<init>(androidx.appcompat.view.menu.StandardMenuPopup)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.appcompat.widget.SearchView$1.run()void
                              androidx.appcompat.widget.SearchView.updateFocusedState()void
                               androidx.appcompat.widget.SearchView.<clinit>()void
                                androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.appcompat.widget.AbsActionBarView$1.run()void
                                                        androidx.appcompat.widget.ActionBarContextView.showOverflowMenu()boolean
                                                         androidx.appcompat.widget.ActionMenuPresenter.showOverflowMenu()boolean
                                                          androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup.<init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean)void
                                                           androidx.appcompat.view.menu.MenuPopupHelper.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)void
                                                            androidx.appcompat.view.menu.MenuPopupHelper.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl.closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)void
                                        androidx.appcompat.app.AppCompatDelegateImpl.callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)void
                                         androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onPanelClosed(int,android.view.Menu)void
                                          androidx.appcompat.view.WindowCallbackWrapper.onPanelClosed(int,android.view.Menu)void
                                           androidx.fragment.app.FragmentActivity.onPanelClosed(int,android.view.Menu)void
                                            androidx.fragment.app.FragmentController.dispatchOptionsMenuClosed(android.view.Menu)void
                                             androidx.fragment.app.FragmentManagerImpl.dispatchOptionsMenuClosed(android.view.Menu)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onSaveInstanceState(android.os.Bundle)void
  androidx.fragment.app.FragmentActivity.onSaveInstanceState(android.os.Bundle)void
   androidx.fragment.app.FragmentController.saveAllState()android.os.Parcelable
    androidx.fragment.app.FragmentManagerImpl.saveAllState()android.os.Parcelable

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat$4$9.<init>(androidx.core.provider.FontsContractCompat$4,android.graphics.Typeface)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.fragment.app.FragmentManagerImpl.beginTransaction()androidx.fragment.app.FragmentTransaction
                                                                  androidx.fragment.app.BackStackRecord.<init>(androidx.fragment.app.FragmentManagerImpl)void
                                                                   androidx.fragment.app.FragmentTransaction.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onSaveInstanceState(android.os.Bundle)void
  androidx.fragment.app.FragmentActivity.onSaveInstanceState(android.os.Bundle)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.loader.app.LoaderManagerImpl$LoaderInfo.onActive()void
               androidx.loader.content.Loader.startLoading()void
                androidx.loader.content.CursorLoader.onStartLoading()void
                 androidx.loader.content.Loader.forceLoad()void
                  androidx.loader.content.AsyncTaskLoader.onForceLoad()void
                   androidx.loader.content.AsyncTaskLoader$LoadTask.<init>(androidx.loader.content.AsyncTaskLoader)void
                    androidx.loader.content.ModernAsyncTask.<init>()void
                     androidx.loader.content.ModernAsyncTask$3.<init>(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.ListPopupWindow$PopupScrollListener.<init>(androidx.appcompat.widget.ListPopupWindow)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.app.ActivityRecreator$3.run()void
                                                        androidx.core.app.ActivityRecreator.<clinit>()void
                                                         androidx.core.app.ActivityRecreator.getActivityThreadClass()java.lang.Class

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.updateForNightMode(int,boolean)boolean
      androidx.appcompat.app.AppCompatDelegateImpl.updateResourcesConfigurationForNightMode(int,boolean)void
       androidx.appcompat.app.AppCompatActivity.onConfigurationChanged(android.content.res.Configuration)void
        androidx.appcompat.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration)void
         androidx.appcompat.widget.AppCompatDrawableManager.get()androidx.appcompat.widget.AppCompatDrawableManager
          androidx.appcompat.widget.AppCompatDrawableManager.preload()void
           androidx.appcompat.widget.AppCompatDrawableManager$1.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])android.graphics.Typeface
                                                         androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                          androidx.core.graphics.TypefaceCompatApi21Impl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.Fragment.<init>()void
  androidx.fragment.app.FragmentManagerImpl.<init>()void
   androidx.fragment.app.FragmentManager.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.Transformations$2$1.<init>(androidx.lifecycle.Transformations$2)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.<init>()void
  androidx.appcompat.app.AppCompatActivity.<init>()void
   androidx.fragment.app.FragmentActivity.<init>()void
    androidx.fragment.app.FragmentController.createController(androidx.fragment.app.FragmentHostCallback)androidx.fragment.app.FragmentController
     androidx.core.util.Preconditions.checkNotNull(java.lang.Object,java.lang.Object)java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab)void
                          androidx.appcompat.widget.ScrollingTabContainerView$TabView.update()void
                           androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context,android.util.AttributeSet,int)void
                            androidx.appcompat.widget.AppCompatTextHelper.loadFromAttributes(android.util.AttributeSet,int)void
                             androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int)void
                              androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setupAutoSizeText()boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)void
                                                  androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.onStateChange(int[])boolean
                                                   androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int)boolean
                                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.indexOfTransition(int,int)int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getCount()int
                         androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter.getCount()int

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.SearchView$SearchAutoComplete$1.run()void
                   androidx.appcompat.widget.SearchView$SearchAutoComplete.showSoftInputIfNecessary()void
                    androidx.appcompat.view.ContextThemeWrapper.getSystemService(java.lang.String)java.lang.Object

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.MediatorLiveData.onActive()void
               androidx.lifecycle.MediatorLiveData$Source.plug()void
                androidx.lifecycle.LiveData.observeForever(androidx.lifecycle.Observer)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.view.menu.MenuPopup.measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)int
                        androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)android.view.View
                         androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                          androidx.cursoradapter.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)android.view.View
                           androidx.appcompat.widget.SuggestionsAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)void
                            androidx.appcompat.widget.AppCompatTextView.getText()java.lang.CharSequence
                             androidx.appcompat.widget.AppCompatTextView.consumeTextFutureAndSetBlocking()void
                              androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)void
                               androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView)androidx.core.text.PrecomputedTextCompat$Params
                                androidx.core.text.PrecomputedTextCompat$Params$Builder.build()androidx.core.text.PrecomputedTextCompat$Params
                                 androidx.core.text.PrecomputedTextCompat$Params.<init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.arch.core.internal.SafeIterableMap.remove(java.lang.Object)java.lang.Object
            androidx.collection.MapCollections$MapIterator.next()java.lang.Object
             androidx.collection.MapCollections$MapIterator.next()java.util.Map$Entry

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.fragment.app.FragmentActivity.onCreate(android.os.Bundle)void
    androidx.fragment.app.FragmentController.restoreSaveState(android.os.Parcelable)void
     androidx.fragment.app.FragmentManagerImpl.restoreSaveState(android.os.Parcelable)void
      androidx.core.util.LogWriter.<init>(java.lang.String)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter.collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)boolean
                                            androidx.appcompat.widget.SearchView.onActionViewCollapsed()void
                                             androidx.appcompat.widget.SearchView.setQuery(java.lang.CharSequence,boolean)void
                                              androidx.appcompat.widget.SearchView.onSubmitQuery()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 com.example.helloelitebook.MainActivity.onCreate(android.os.Bundle)void
  androidx.appcompat.app.AppCompatActivity.onCreate(android.os.Bundle)void
   androidx.appcompat.app.AppCompatDelegateImpl.onCreate(android.os.Bundle)void
    androidx.appcompat.app.AppCompatDelegateImpl.ensureWindow()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.fragment.app.FragmentTransition$1.run()void
                                                           androidx.fragment.app.FragmentTransition.<clinit>()void
                                                            androidx.fragment.app.FragmentTransitionCompat21.<init>()void
                                                             androidx.fragment.app.FragmentTransitionImpl.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.Fragment.<init>()void
  androidx.lifecycle.MutableLiveData.<init>()void
   androidx.lifecycle.LiveData.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onDestroy()void
  androidx.appcompat.app.AppCompatDelegateImpl.onDestroy()void
   androidx.appcompat.app.AppCompatDelegate.markStopped(androidx.appcompat.app.AppCompatDelegate)void
    androidx.appcompat.app.AppCompatDelegate.removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                  androidx.core.graphics.drawable.WrappedDrawableState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                   androidx.core.graphics.drawable.WrappedDrawableApi21.<init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)void
                                                    androidx.core.graphics.drawable.WrappedDrawableApi21.findAndCacheIsProjectedDrawableMethod()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])android.graphics.Typeface
                                                         androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                          androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                           androidx.core.graphics.TypefaceCompatBaseImpl.createFromInputStream(android.content.Context,java.io.InputStream)android.graphics.Typeface
                                                            androidx.core.graphics.TypefaceCompatUtil.getTempFile(android.content.Context)java.io.File

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat.buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])android.graphics.Typeface
                                                         androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                          androidx.core.graphics.TypefaceCompatApi24Impl.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)android.graphics.Typeface
                                                           androidx.core.graphics.TypefaceCompatApi24Impl.createFromFamiliesWithDefault(java.lang.Object)android.graphics.Typeface

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$6.run()void
                                     androidx.core.view.ViewPropertyAnimatorCompat.alpha(float)androidx.core.view.ViewPropertyAnimatorCompat

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$2.run()void
                                                        androidx.loader.content.ModernAsyncTask$2.call()java.lang.Object
                                                         androidx.loader.content.ModernAsyncTask.postResult(java.lang.Object)java.lang.Object
                                                          androidx.loader.content.ModernAsyncTask.<clinit>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.FontsContractCompat$4.run()void
                                                        androidx.core.provider.FontsContractCompat$4$3.<init>(androidx.core.provider.FontsContractCompat$4)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback.onCreatePanelMenu(int,android.view.Menu)boolean
                                        androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu)boolean
                                         androidx.fragment.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)boolean
                                          androidx.appcompat.app.AppCompatActivity.getMenuInflater()android.view.MenuInflater
                                           androidx.appcompat.app.AppCompatDelegateImpl.getMenuInflater()android.view.MenuInflater
                                            androidx.appcompat.app.AppCompatDelegateImpl.initWindowDecorActionBar()void
                                             androidx.appcompat.app.WindowDecorActionBar.<init>(android.app.Dialog)void
                                              androidx.appcompat.app.ActionBar.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.setMenu(androidx.appcompat.view.menu.MenuBuilder)void
                                        androidx.appcompat.view.menu.MenuBuilder.addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)void
                                         androidx.appcompat.view.menu.MenuBuilder.addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.Fragment.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ActionBarOverlayLayout.pullChildren()void
                                         androidx.appcompat.widget.ActionBarOverlayLayout.getDecorToolbar(android.view.View)androidx.appcompat.widget.DecorToolbar
                                          androidx.appcompat.widget.Toolbar.getWrapper()androidx.appcompat.widget.DecorToolbar
                                           androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean)void
                                            androidx.appcompat.widget.ToolbarWidgetWrapper.<init>(androidx.appcompat.widget.Toolbar,boolean,int,int)void
                                             androidx.appcompat.widget.Toolbar.setNavigationOnClickListener(android.view.View$OnClickListener)void
                                              androidx.appcompat.widget.Toolbar.ensureNavButtonView()void
                                               androidx.appcompat.widget.AppCompatImageButton.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.AppCompatImageHelper.loadFromAttributes(android.util.AttributeSet,int)void
                                                 androidx.core.widget.ImageViewCompat.setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)void
                                                  androidx.appcompat.graphics.drawable.DrawableWrapper.isStateful()boolean
                                                   androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.isStateful()boolean
                                                    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.isStateful()boolean
                                                     androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.isStateful()boolean
                                                      androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.isStateful()boolean

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.appcompat.app.AlertController$5.run()void
                             androidx.appcompat.app.AlertController.manageScrollIndicators(android.view.View,android.view.View,android.view.View)void
                              androidx.appcompat.widget.ActionBarContainer.setVisibility(int)void
                               androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.setVisible(boolean,boolean)boolean
                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.jumpToCurrentState()void
                                 androidx.appcompat.graphics.drawable.DrawableContainer.selectDrawable(int)boolean
                                  androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.getChild(int)android.graphics.drawable.Drawable
                                   androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.mutate()android.graphics.drawable.Drawable
                                     androidx.appcompat.graphics.drawable.StateListDrawable.mutate()android.graphics.drawable.Drawable
                                      androidx.appcompat.graphics.drawable.DrawableContainer.mutate()android.graphics.drawable.Drawable
                                       androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.mutate()void
                                        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                         androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mutate()android.graphics.drawable.Drawable
                                          androidx.core.graphics.drawable.WrappedDrawableApi14.mutate()android.graphics.drawable.Drawable
                                           androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                            androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                             androidx.appcompat.graphics.drawable.DrawableContainer.getConstantState()android.graphics.drawable.Drawable$ConstantState
                                              androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()boolean
                                               androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState.createAllFutures()void
                                                androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState.newDrawable(android.content.res.Resources)android.graphics.drawable.Drawable
                                                 androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.<init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)void
                                                  androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.onStateChange(int[])boolean
                                                   androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.selectTransition(int)boolean
                                                    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition.<init>(android.graphics.drawable.AnimationDrawable,boolean,boolean)void
                                                     androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator.<init>(android.graphics.drawable.AnimationDrawable,boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.core.provider.SelfDestructiveThread$2.run()void
                                                        androidx.core.provider.FontsContractCompat$1.call()java.lang.Object
                                                         androidx.core.provider.FontsContractCompat$1.call()androidx.core.provider.FontsContractCompat$TypefaceResult
                                                          androidx.core.provider.FontsContractCompat.getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)androidx.core.provider.FontsContractCompat$TypefaceResult
                                                           androidx.core.provider.FontsContractCompat$TypefaceResult.<init>(android.graphics.Typeface,int)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)android.graphics.drawable.Drawable
                                                        androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)boolean
                                                         androidx.appcompat.widget.ThemeUtils.getDisabledThemeAttrColor(android.content.Context,int)int
                                                          androidx.appcompat.widget.ThemeUtils.getThemeAttrColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                           androidx.appcompat.widget.TintTypedArray.getColorStateList(int)android.content.res.ColorStateList
                                                            androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int)android.content.res.ColorStateList
                                                             androidx.appcompat.content.res.AppCompatResources.addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.Fragment$1.run()void
                                                        androidx.fragment.app.Fragment.startPostponedEnterTransition()void
                                                         android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)boolean
                                                          androidx.appcompat.view.menu.CascadingMenuPopup$3$1.run()void
                                                           androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int)boolean
                                                            androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)boolean
                                                             androidx.appcompat.view.menu.MenuItemImpl.invoke()boolean
                                                              androidx.fragment.app.DialogFragment$1.run()void
                                                               androidx.fragment.app.DialogFragment.onDismiss(android.content.DialogInterface)void
                                                                androidx.fragment.app.DialogFragment.dismissInternal(boolean,boolean)void
                                                                 androidx.fragment.app.BackStackRecord.remove(androidx.fragment.app.Fragment)androidx.fragment.app.FragmentTransaction

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.FragmentManagerImpl$2.run()void
                                                        androidx.fragment.app.FragmentManagerImpl.execPendingActions()boolean
                                                         androidx.fragment.app.FragmentManagerImpl.ensureExecReady(boolean)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.appcompat.app.AppCompatActivity.onStart()void
  androidx.appcompat.app.AppCompatDelegateImpl.onStart()void
   androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight()boolean
    androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(boolean)boolean
     androidx.appcompat.app.AppCompatDelegateImpl.updateForNightMode(int,boolean)boolean
      androidx.appcompat.app.AppCompatDelegateImpl.updateResourcesConfigurationForNightMode(int,boolean)void
       androidx.appcompat.app.ResourcesFlusher.flush(android.content.res.Resources)void
        androidx.appcompat.app.ResourcesFlusher.flushMarshmallows(android.content.res.Resources)void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$6.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl$6$1.<init>(androidx.appcompat.app.AppCompatDelegateImpl$6)void
                                      androidx.core.view.ViewPropertyAnimatorListenerAdapter.<init>()void

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.view.menu.MenuBuilder.saveActionViewStates(android.os.Bundle)void
                                       androidx.appcompat.view.menu.MenuItemImpl.getActionView()android.view.View
                                        androidx.core.view.ActionProvider.onCreateActionView(android.view.MenuItem)android.view.View
                                         androidx.appcompat.widget.ShareActionProvider.onCreateActionView()android.view.View
                                          androidx.appcompat.widget.ActivityChooserView.setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)void
                                           androidx.appcompat.widget.ActivityChooserView.showPopup()boolean
                                            androidx.appcompat.widget.ActivityChooserView.isShowingPopup()boolean
                                             androidx.appcompat.widget.ActivityChooserView.getListPopupWindow()androidx.appcompat.widget.ListPopupWindow
                                              androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context)void
                                               androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int)void
                                                androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                 androidx.appcompat.widget.AppCompatPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int,int)void
                                                  androidx.appcompat.widget.AppCompatPopupWindow.init(android.content.Context,android.util.AttributeSet,int,int)void
                                                   androidx.appcompat.widget.TintTypedArray.getDrawable(int)android.graphics.drawable.Drawable
                                                    androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                     androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int)android.graphics.drawable.Drawable
                                                      androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context,int,boolean)android.graphics.drawable.Drawable
                                                       androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context,int)android.graphics.drawable.Drawable

dummyMainClass.dummyMainMethod_com_example_helloelitebook_MainActivity(android.content.Intent)com.example.helloelitebook.MainActivity
 androidx.fragment.app.FragmentManagerImpl$3.onAnimationEnd(android.view.animation.Animation)void
  androidx.fragment.app.FragmentManagerImpl$3$1.run()void
   androidx.fragment.app.FragmentManagerImpl.moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)void
    androidx.loader.app.LoaderManagerImpl$LoaderInfo.setValue(java.lang.Object)void
     androidx.lifecycle.MutableLiveData.setValue(java.lang.Object)void
      androidx.lifecycle.LiveData.setValue(java.lang.Object)void
       androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)void
        androidx.lifecycle.LiveData.considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)void
         androidx.lifecycle.Transformations$2.onChanged(java.lang.Object)void
          androidx.lifecycle.MediatorLiveData.removeSource(androidx.lifecycle.LiveData)void
           androidx.lifecycle.MediatorLiveData$Source.unplug()void
            androidx.lifecycle.LiveData.removeObserver(androidx.lifecycle.Observer)void
             androidx.lifecycle.LiveData$ObserverWrapper.activeStateChanged(boolean)void
              androidx.lifecycle.ComputableLiveData$1.onActive()void
               androidx.arch.core.executor.ArchTaskExecutor$1.execute(java.lang.Runnable)void
                androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable)void
                 androidx.arch.core.executor.DefaultTaskExecutor.postToMainThread(java.lang.Runnable)void
                  androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable.run()void
                   androidx.appcompat.view.menu.MenuPopupHelper.tryShow()boolean
                    androidx.appcompat.view.menu.MenuPopupHelper.showPopup(int,int,boolean,boolean)void
                     androidx.appcompat.view.menu.StandardMenuPopup.show()void
                      androidx.appcompat.view.menu.StandardMenuPopup.tryShow()boolean
                       androidx.appcompat.widget.ListPopupWindow.show()void
                        android.os.Handler.post(java.lang.Runnable)boolean
                         androidx.loader.content.AsyncTaskLoader$LoadTask.run()void
                          androidx.loader.content.AsyncTaskLoader.executePendingTask()void
                           android.os.Handler.postAtTime(java.lang.Runnable,long)boolean
                            androidx.lifecycle.ComputableLiveData$3.run()void
                             androidx.core.provider.SelfDestructiveThread$2$1.run()void
                              androidx.core.provider.FontsContractCompat$2.onReply(java.lang.Object)void
                               androidx.core.provider.FontsContractCompat$2.onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)void
                                androidx.core.content.res.ResourcesCompat$FontCallback.callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)void
                                 androidx.core.content.res.ResourcesCompat$FontCallback$1.run()void
                                  androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback.onFontRetrieved(android.graphics.Typeface)void
                                   androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable)void
                                    androidx.appcompat.app.AppCompatDelegateImpl$2.run()void
                                     androidx.appcompat.app.AppCompatDelegateImpl.doInvalidatePanelMenu(int)void
                                      androidx.appcompat.app.AppCompatDelegateImpl.preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)boolean
                                       androidx.appcompat.widget.ActionBarOverlayLayout.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                        androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)void
                                         androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)void
                                          androidx.appcompat.widget.ActionMenuPresenter.updateMenuView(boolean)void
                                           androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean)void
                                            androidx.appcompat.widget.ActionMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                             androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)android.view.View
                                              androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)void
                                               androidx.appcompat.view.menu.ActionMenuItemView.initialize(androidx.appcompat.view.menu.MenuItemImpl,int)void
                                                androidx.appcompat.view.menu.ActionMenuItemView.setTitle(java.lang.CharSequence)void
                                                 androidx.appcompat.view.menu.ActionMenuItemView.updateTextButtonVisibility()void
                                                  androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                   androidx.appcompat.widget.TooltipCompatHandler.setTooltipText(android.view.View,java.lang.CharSequence)void
                                                    androidx.appcompat.widget.TooltipCompatHandler.hide()void
                                                     androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)void
                                                      androidx.appcompat.widget.TooltipCompatHandler.scheduleShow()void
                                                       androidx.fragment.app.FragmentManagerImpl$2.run()void
                                                        androidx.fragment.app.FragmentManagerImpl.execPendingActions()boolean
                                                         androidx.fragment.app.FragmentManagerImpl.doPendingDeferredStart()void
                                                          androidx.fragment.app.FragmentManagerImpl.startPendingDeferredFragments()void

